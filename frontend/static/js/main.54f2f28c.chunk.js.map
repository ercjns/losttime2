{"version":3,"sources":["assets/LostTimeWordmark.svg","assets/mapmontageblur.jpg","components/Header.tsx","components/dz.tsx","orienteering/SportSoftware.ts","orienteering/WiolEntry.ts","orienteering/CascadeRegistration.ts","lt/Entry.ts","components/PageTitle.tsx","components/adminentries/Entry.tsx","components/adminentries/EntryFile.tsx","components/adminentries/RegistrationClassCount.tsx","orienteering/RegistrationCheckinPdf.ts","components/adminentries/EntryProcessor.tsx","components/adminresults/RaceDetailsForm.tsx","components/adminresults/ResultsProcessor.tsx","components/results/Results.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","Navbar","expand","style","backgroundImage","mapblur","backgroundRepeat","marginBottom","maxWidth","width","Brand","as","Link","to","paddingLeft","src","wordmark","alt","height","margin","Toggle","marginRight","Collapse","id","Nav","NavDropdown","title","marginLeft","Item","React","Component","BasicDz","props","onDrop","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","fontStyle","outline","transition","activeStyle","acceptStyle","rejectStyle","files","console","log","i","length","parser","setState","state","this","getRootProps","getInputProps","className","helpText","fromLtEntries","entries","nextstartno","OeEntries","maxstartnoinuse","Math","max","map","o","StartNo","e","GroupLeader","push","convertFromLtEntry","entry","Error","Stno","Chipno","Epunch","toString","Surname","LastName","FirstName","S","Sex","nc","NonCompetitive","Classifier","City","Club","Short","ClassId","Rented","EpunchRented","Paid","COLUMNS_STANDARD","COLUMNS_SCOREO","isWiolEntryCsv","row","Object","keys","isCascadeRegistrationCsv","LtEntry","Course","Phone","EmergencyPhone","CarLicense","Newcomer","Group","Owed","Rental","NC","Gender","EPunch","Class","PageTitle","marginTop","Entry","value","textAlign","EntryFile","failed","name","success","RegistrationClassCount","Col","xs","sm","md","lg","classname","regcount","buildCheckInPdf","userHeaderText","fonts","Roboto","normal","bold","italics","bolditalics","tablebodyowned","text","noWrap","tablebodyrented","tablebodyrented2","GroupLeaders","filter","ownedepunchentries","buildRegPdfRow","rentalepunchentries","rentalepunchentries2","lastNameSort","a","b","localeCompare","header","pageTitle","columns","fontSize","buildfooter","currentPage","pageCount","nowtimestring","alignment","sort","instructionsRegOwned","instructionsRegRent","instructionsFinishRent","tableLayoutRent","fillColor","rowIndex","paddingRight","paddingTop","paddingBottom","hLineWidth","node","table","body","headerRows","vLineWidth","hLineColor","tableLayoutOwned","vLineColor","now","Date","y","getFullYear","month","getMonth","d","getDate","padStart","day","getDay","H","getHours","M","getMinutes","concat","docDefinitionOwned","pageSize","pageOrientation","footer","content","layout","dontBreakRows","docDefinitionRented1","docDefinitionRented2","doc","pdfMake","widths","heights","border","lineHeight","background","formatPhoneNumber","phoneNumberString","cleaned","replace","match","join","EntryProcessor","filesprocessed","pdftextvalue","downloadOeRegCsv","bind","updateEntries","handleClearEntries","downloadpdf","onpdftextchange","isScoreO","forexport","SS","unparseconfig","quotes","delimiter","skipEmptyLines","csvstring","Papa","unparse","nowstring","el","document","createElement","href","encodeURI","target","download","click","m","file","parse","transform","col","trim","complete","results","parsed","indata","nextbib","newentries","empty","fromWiolEntryCsv","fromCascadeRegistrationCsv","data","meta","maxstartno","parseEnties","newfile","headerText","checkInPdfs","x","fileTimeString","pdf","fileName","preventDefault","colSpan","filemeta","regclasshist","reduce","reg","counts","toLocaleLowerCase","regclass","Row","ButtonToolbar","ButtonGroup","DropdownButton","variant","disabled","Dropdown","onClick","Menu","minWidth","ItemText","Form","onSubmit","FormControl","type","onChange","Button","RaceDetailsForm","error","isLoaded","races","fetch","event","then","res","json","result","getRaceClasses","finish_status","formatTimeMMMSS","time","seconds","floor","s","competitive","score","eventresults","acc","some","eventclass_id","toadd","findIndex","raceresults","resultsByTeam","club","forEach","team","top","compareResultsByScore","slice","prev","undefined","compareResults","index","array","pos","race","event_scoring","assignIndvScores","indvClasses","race_scoring","person","formatTimeString","teamClassesToProcess","combineResultsForEventClasses","teamresults","buildTeams","compareTeamResults","teamClasses","Fragment","message","api_key","ResultsProcessor","loadNewResults","isProcessing","formData","FormData","append","method","Results","events","getEvents","App","Container","fluid","minHeight","span","offset","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.54f2f28c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/LostTimeWordmark.2977d17a.svg\";","export default __webpack_public_path__ + \"static/media/mapmontageblur.c977ea5b.jpg\";","import React from 'react';\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport wordmark from  '../assets/LostTimeWordmark.svg';\nimport mapblur from '../assets/mapmontageblur.jpg';\n\nexport class Header extends React.Component<{}, {}, {}> {\n\n  render () {\n  return (\n    <Navbar expand=\"md\" style={{\n      backgroundImage: `url(${mapblur})`,\n      backgroundRepeat: 'repeat-xy',\n      marginBottom: '20px',\n      maxWidth: '100%',\n      width: '100%'\n    }}>\n      <Navbar.Brand as={Link} to=\"/\" style={{paddingLeft: '1rem'}}><img src={wordmark} alt=\"Lost Time Orienteering\" style={{\n              height: '60px',\n              margin: '0px'\n            }}></img>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" style={{marginRight: '2rem'}}/>\n      <Navbar.Collapse id=\"basic-navbar-nav\" >\n        <Nav>\n          {/* <Nav.Link href=\"#events\" style={{marginLeft: '1rem'}}>Events</Nav.Link> */}\n          <NavDropdown title=\"Admin\" id=\"basic-nav-dropdown\" style={{marginLeft: '1rem'}}>\n            <NavDropdown.Item as={Link} to=\"/registrations\">Process Registrations</NavDropdown.Item>\n            <NavDropdown.Item as={Link} to=\"/results\">Add Results</NavDropdown.Item>\n          </NavDropdown>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n  }\n}","import React, {Component} from 'react';\nimport Dropzone from 'react-dropzone';\n\nexport class BasicDz extends Component<{parser:any, helpText:String}, {files:File[]}, {}> {\n  onDrop: (files: File[]) => void;\n  constructor(props:{parser:any, helpText:String}) {\n    super(props);\n    this.onDrop = (files) => {\n        console.log(files);\n        for (let i = 0; i < files.length; i++) {\n            this.props.parser(files[i]);\n        };\n      this.setState({files})\n    };\n    this.state = {\n      files: []\n    };\n  }\n\n  baseStyle:any = {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '20px',\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: 'magenta',\n    borderStyle: 'dashed',\n    backgroundColor: 'lightgrey',\n    color: 'black',\n    fontStyle: 'italic',\n    outline: 'none',\n    transition: 'border .24s ease-in-out'\n  };\n\n  activeStyle:any = {\n    borderColor: '#2196f3'\n  };\n  \n  acceptStyle:any = {\n    borderColor: '#00e676'\n  };\n  \n  rejectStyle:any = {\n    borderColor: '#ff1744'\n  };\n\n  render() {\n    return (\n      <Dropzone onDrop={this.onDrop}>\n        {({getRootProps, getInputProps}) => (\n          <section className=\"container\">\n            <div {...getRootProps({\n                className: 'dropzone',\n                style: this.baseStyle,\n                   })}>\n              <input {...getInputProps()} />\n              <p>{this.props.helpText}</p>\n            </div>\n          </section>\n        )}\n      </Dropzone>\n    );\n  }\n}","import { LtEntry } from \"../lt/Entry\";\n\nexport type OeEntryCsv = {\n    Stno: number,\n    Chipno: string | null,\n    \"Database Id\":null,\n    Surname: string | null,\n    \"First name\": string | null\n    S: string,\n    nc: 0|1,\n    Classifier: 0,\n    City: string | null,\n    Short: string | null,\n    Rented: \"X\" | null,\n    \"Start fee\":0,\n    Paid:\"X\"\n  }\n\nexport function fromLtEntries(entries: LtEntry[]): OeEntryCsv[] {\n  let OeEntries:OeEntryCsv[] = [];\n  let nextstartno:number;\n  const maxstartnoinuse = Math.max(...entries.map(o => o.StartNo? o.StartNo:0))\n  nextstartno = maxstartnoinuse > 1001 ? maxstartnoinuse+1 : 1001;\n\n  for (let e of entries) {\n    if (!e.GroupLeader) {continue}\n    if (!e.StartNo) {\n      e.StartNo = nextstartno;\n      nextstartno++;\n    }\n    OeEntries.push(convertFromLtEntry(e));\n  }\n  return OeEntries;\n}\n\nfunction convertFromLtEntry(entry:LtEntry): OeEntryCsv {\n  if (!entry.StartNo) {\n    throw new Error('Start number is required');\n  }\n  return {\n    Stno: entry.StartNo,\n    Chipno: entry.Epunch.toString(),\n    \"Database Id\":null,\n    Surname: entry.LastName,\n    \"First name\": entry.FirstName,\n    S: entry.Sex,\n    nc: entry.NonCompetitive ? 1:0,\n    Classifier: 0,\n    City: entry.Club,\n    Short: entry.ClassId,\n    Rented: entry.EpunchRented ? \"X\" : null,\n    \"Start fee\":0,\n    Paid: \"X\"\n  }\n}\n\nexport const COLUMNS_STANDARD = [\n    \"OE0001\",\n    \"Stno\",\n    \"XStno\",\n    \"Chipno\",\n    \"Database Id\",\n    \"Surname\",\n    \"First name\",\n    \"YB\",\n    \"S\",\n    \"Block\",\n    \"nc\",\n    \"Start\",\n    \"Finish\",\n    \"Time\",\n    \"Classifier\",\n    \"Credit -\",\n    \"Penalty +\",\n    \"Comment\",\n    \"Club no.\",\n    \"Cl.name\",\n    \"City\",\n    \"Nat\",\n    \"Location\",\n    \"Region\",\n    \"Cl. no.\",\n    \"Short\",\n    \"Long\",\n    \"Entry cl. No\",\n    \"Entry class (short)\",\n    \"Entry class (long)\",\n    \"Rank\",\n    \"Ranking points\",\n    \"Num1\",\n    \"Num2\",\n    \"Num3\",\n    \"Text1\",\n    \"Text2\",\n    \"Text3\",\n    \"Addr. surname\",\n    \"Addr. first name\",\n    \"Street\",\n    \"Line2\",\n    \"Zip\",\n    \"Addr. city\",\n    \"Phone\",\n    \"Mobile\",\n    \"Fax\",\n    \"EMail\",\n    \"Rented\",\n    \"Start fee\",\n    \"Paid\",\n    \"Team\",\n    \"Course no.\",\n    \"Course\",\n    \"km\",\n    \"m\",\n    \"Course controls\"\n  ]\n\nexport const COLUMNS_SCOREO = [\n  \"OESco0001\",\n  \"Stno\",\n  \"XStno\",\n  \"Chipno\",\n  \"Database Id\",\n  \"Surname\",\n  \"First name\",\n  \"YB\",\n  \"S\",\n  \"Block\",\n  \"nc\",\n  \"Start\",\n  \"Finish\",\n  \"Time\",\n  \"Classifier\",\n  \"Credit -\",\n  \"Penalty +\",\n  \"Comment\",\n  \"Club no.\",\n  \"Cl.name\",\n  \"City\",\n  \"Nat\",\n  \"Location\",\n  \"Region\",\n  \"Cl. no.\",\n  \"Short\",\n  \"Long\",\n  \"Entry cl. No\",\n  \"Entry class (short)\",\n  \"Entry class (long)\",\n  \"Rank\",\n  \"Ranking points\",\n  \"Num1\",\n  \"Num2\",\n  \"Num3\",\n  \"Text1\",\n  \"Text2\",\n  \"Text3\",\n  \"Addr. surname\",\n  \"Addr. first name\",\n  \"Street\",\n  \"Line2\",\n  \"Zip\",\n  \"Addr. city\",\n  \"Phone\",\n  \"Mobile\",\n  \"Fax\",\n  \"EMail\",\n  \"Rented\",\n  \"Start fee\",\n  \"Paid\",\n  \"Team\",\n  \"Course no.\",\n  \"Course\",\n  \"km\",\n  \"m\",\n  \"Course controls\"\n]\n","export class WiolEntryCsv {\n    \"Bib\"!: number;\n    \"SI Card\"!: string;\n    Rental!: \"X\" | null;\n    \"First Name\"!: string;\n    \"Last Name\"!: string;\n    Gender!: \"M\" | \"F\";\n    \"School Code\"!: string;\n    Course!: string;\n    NC!: \"X\" | null;\n}\n\nexport function isWiolEntryCsv(row:any): boolean {\n    return (\n        Object.keys(row).length === 9 &&\n        'Bib' in row &&\n        \"SI Card\" in row &&\n        'Rental' in row &&\n        \"First Name\" in row &&\n        \"Last Name\" in row &&\n        'Gender' in row &&\n        'School Code' in row &&\n        'Course' in row &&\n        'NC' in row\n    )\n}","export class CascadeRegistrationCsv {\n    FirstName!: string;\n    LastName!: string;\n    Email!: string;\n    Club!: string;\n    Class!: string;\n    Sex!: \"F\" | \"M\";\n    EPunch!: string;\n    Phone!: string;\n    EmergencyPhone!: string;\n    CarLicense!: string;\n    Newcomer!: true | false;\n    Group!: number | '*' | null;\n    Paid!: true | false;\n    Owed!: number | null\n}\n\nexport function isCascadeRegistrationCsv(row:any): boolean {\n    if (\n        // Object.keys(row).length === 14 &&\n        'FirstName' in row &&\n        'LastName' in row &&\n        'Email' in row &&\n        'Club' in row &&\n        'Class' in row &&\n        'Sex' in row &&\n        'EPunch' in row &&\n        'Phone' in row &&\n        'EmergencyPhone' in row &&\n        'CarLicense' in row &&\n        'Newcomer' in row &&\n        'Group' in row &&\n        'Paid' in row &&\n        'Owed' in row\n    ) {\n        return true;\n    }\n    return false;\n}","import { isWiolEntryCsv, WiolEntryCsv } from \"../orienteering/WiolEntry\"\nimport { CascadeRegistrationCsv, isCascadeRegistrationCsv } from \"../orienteering/CascadeRegistration\"\n\nexport type ParseResult = {\n    data: LtEntry[],\n    meta: {\n      success: number,\n      failed: number,\n      empty: number,\n      maxstartno: number,\n    }\n  }\n\nexport class LtEntry {\n    StartNo!: number | null;\n    Epunch!: string;\n    EpunchRented!: true | false;\n    FirstName!: string;\n    LastName!: string;\n    Club!: string;\n    Course!: string;\n    ClassId!: string;\n    NonCompetitive!: true | false;\n    Sex!: \"F\" | \"M\";\n    Phone!: string;\n    EmergencyPhone!: string;\n    CarLicense!: string;\n    Newcomer!: true | false | \"unknown\";\n    Group!: number;\n    GroupLeader!: boolean;\n    Paid!: true | false | \"unknown\";\n    Owed!: number;\n\n    fromWiolEntryCsv(\n        entry: WiolEntryCsv\n    ) {\n        this.StartNo = entry[\"Bib\"];\n        this.Epunch = entry[\"SI Card\"];\n        this.EpunchRented= (entry.Rental === 'X') ? true: false;\n        this.FirstName= entry[\"First Name\"];\n        this.LastName= entry[\"Last Name\"];\n        this.Club= entry[\"School Code\"];\n        this.Course= '';\n        this.ClassId= entry.Course;\n        this.NonCompetitive= (entry.NC === 'X') ? true:false;\n        this.Sex= entry.Gender;\n        this.Phone= '';\n        this.EmergencyPhone= '';\n        this.CarLicense= '';\n        this.Newcomer= \"unknown\";\n        this.Group= 1;\n        this.GroupLeader= true;\n        this.Paid= \"unknown\";\n        this.Owed= 0;\n\n        return this;\n    }\n    fromCascadeRegistrationCsv(\n        entry: CascadeRegistrationCsv,\n    ) {\n        this.StartNo = null;\n        this.Epunch = entry.EPunch\n        this.EpunchRented= (entry.EPunch === '' && entry.Group !== '*') ? true:false;\n        this.FirstName= entry.FirstName\n        this.LastName= entry.LastName\n        this.Club= entry.Club\n        this.Course= '';\n        this.ClassId= entry.Class;\n        this.NonCompetitive= false;\n        this.Sex= entry.Sex\n        this.Phone= entry.Phone\n        this.EmergencyPhone= entry.EmergencyPhone;\n        this.CarLicense= entry.CarLicense\n        this.Newcomer= entry.Newcomer\n        this.Group= (entry.Group) ? (entry.Group === '*' ? 0 : entry.Group): 1;\n        this.GroupLeader= (entry.Group === '*') ? false : true;\n        this.Paid= entry.Paid\n        this.Owed= (entry.Owed) ? entry.Owed: 0;\n\n        return this;\n    }\n}\n\nexport function parseEnties(indata:any[], nextbib?:number): ParseResult {\n\n    const newentries:LtEntry[] = [];\n    let empty = 0;\n    let failed = 0;\n    for (const row of indata) {\n\n        if (isWiolEntryCsv(row)) {\n            const e = new LtEntry().fromWiolEntryCsv(row);\n            newentries.push(e);\n            continue;\n        } else if (isCascadeRegistrationCsv(row)) {\n            const e = new LtEntry().fromCascadeRegistrationCsv(row);\n            newentries.push(e);\n            continue;\n        } else if (Object.keys(row).length <= 1) {\n            console.log(Object.keys(row))\n            console.log('empty row');\n            empty += 1;\n            continue;\n        } else {\n            console.log(Object.keys(row))\n            console.log('failed to parse row');\n            failed += 1;\n        }\n    }\n\n    return {\n        data: newentries,\n        meta: {\n            success: newentries.length,\n            failed: failed,\n            empty: empty,\n            maxstartno: Math.max(...newentries.map(o => o.StartNo? o.StartNo:1001))\n        }\n    }\n}","import React from 'react';\n\nexport class PageTitle extends React.Component<{title: string}, {}, {}> {\n\n  render () {\n  return (\n    <div>\n    <h2 style={{\n\n    }}>\n        {this.props.title}\n    </h2>\n    <div style={{\n        width: '100%',\n        height: '2px',\n        backgroundColor: 'magenta',\n        marginTop: '10px',\n        marginBottom: '10px'\n    }}>\n    </div>\n    </div>\n  );\n  }\n\n}","import React from 'react';\nimport { LtEntry } from '../../lt/Entry';\n\nexport class Entry extends React.Component<{value: LtEntry}, {}, {}> {\n\n  render () {\n  return (\n    <tr>\n      <td>{this.props.value.FirstName}</td>\n      <td>{this.props.value.LastName}</td>\n      <td>{(this.props.value.Group > 1 )? \"Lead (\" + this.props.value.Group + \")\": (this.props.value.Group < 1 )? \"Member\": \"\"}</td>\n      <td>{this.props.value.Epunch}</td>\n      <td style={{textAlign:'center'}}>{this.props.value.EpunchRented? \"yes\": \"no\"}</td>\n      <td>{this.props.value.ClassId}</td>\n      <td>{this.props.value.StartNo}</td>\n    </tr>\n  );\n  }\n\n}","import React from 'react';\n\nexport type entryFileMeta = {\n    name: string,\n    success: number,\n    failed: number,\n    empty: number\n  }\n\nexport class EntryFile extends React.Component<entryFileMeta, {}, any> {\n\n  render () {\n    if (this.props.failed > 0) {\n      return <li>{this.props.name} (Found: {this.props.success}, Failed: {this.props.failed})</li>\n    }\n    return (\n      <li>{this.props.name} (Found: {this.props.success})</li>\n    )\n  }\n}","import React from 'react';\nimport { Col } from 'react-bootstrap';\n\nexport class RegistrationClassCount extends React.Component<{classname:string, regcount:number}, {}, {}> {\n\n  render () {\n    return (\n      // <li>\n      //   <b>{this.props.classname}</b>: {this.props.regcount}\n      // </li>\n      <Col xs={4} sm={3} md={4} lg={3}><b>{this.props.classname}</b>: {this.props.regcount}</Col>\n\n    )\n  }\n}","import { LtEntry } from \"../lt/Entry\";\nimport * as pdfMake from \"pdfmake/build/pdfmake\";\nimport { TDocumentDefinitions, TFontDictionary } from 'pdfmake/interfaces';\n\nexport function buildCheckInPdf(entries:LtEntry[], files:String[], userHeaderText:string=''): {name:string, doc:pdfMake.TCreatedPdf}[] {\n    \n    const fonts:TFontDictionary = {\n        // download default Roboto font from cdnjs.com\n     Roboto: {\n       normal: 'https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/fonts/Roboto/Roboto-Regular.ttf',\n       bold: 'https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/fonts/Roboto/Roboto-Medium.ttf',\n       italics: 'https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/fonts/Roboto/Roboto-Italic.ttf',\n       bolditalics: 'https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/fonts/Roboto/Roboto-MediumItalic.ttf'\n     },\n    }\n    \n    const tablebodyowned: any[][] = [[' ', 'First', 'Last', 'Owed', 'Course', 'Epunch', 'Club', 'Phone', {text:'Emergency. Ph.', noWrap:true}, 'Vehicle']]\n    const tablebodyrented: any[][] = [[' ', 'First', 'Last', 'Owed', 'Course', 'Epunch', 'Club', 'Phone', {text:'Emergency. Ph.', noWrap:true}, 'Vehicle']]\n    const tablebodyrented2: any[][] = [[' ', 'First', 'Last', 'Owed', 'Course', 'Epunch', 'Club', 'Phone', {text:'Emergency. Ph.', noWrap:true}, 'Vehicle']]\n\n    const GroupLeaders = entries.filter(entry => entry.GroupLeader === true);\n\n    const ownedepunchentries = GroupLeaders.filter(entry => entry.Epunch.length > 0).map(buildRegPdfRow);\n    const rentalepunchentries = GroupLeaders.filter(entry => entry.Epunch.length === 0).map(buildRegPdfRow);\n    const rentalepunchentries2 = GroupLeaders.filter(entry => entry.Epunch.length === 0).map(buildRegPdfRow);\n\n    tablebodyowned.push(...ownedepunchentries);\n    tablebodyrented.push(...rentalepunchentries);\n    tablebodyrented2.push(...rentalepunchentries2);\n\n    tablebodyowned.sort(lastNameSort);\n    tablebodyrented.sort(lastNameSort);\n    tablebodyrented2.sort(lastNameSort);\n\n    function lastNameSort(a:any[any][], b:any[any][]):number {\n        if (a[2].text && b[2].text) {\n            return a[2].text.localeCompare(b[2].text);\n        } else if (a[2].text) {\n            return 1;\n        } else {\n            return -1;\n        }\n    };\n\n    function header(pageTitle:string):any {\n        return({\n            columns: [\n                {\n                    width: '50%',\n                    text: pageTitle,\n                },\n                {\n                    width: '50%',\n                    text: userHeaderText,\n                }\n            ],\n            bold: true,\n            fontSize: 15,\n            margin: [0,0,0,10] // bottom only\n        })\n    };\n\n    function buildfooter(currentPage:number, pageCount:number):any {\n        return({\n            columns: [{\n                text: 'Page ' + currentPage.toString() + ' of ' + pageCount + '. Created: ' + nowtimestring(),\n                fontSize: 8,\n                margin: [50,0,0,0]\n                },\n                {\n                    text: 'Source File(s): ' + files,\n                    fontSize: 8,\n                    margin: [0,0,50,0],\n                    alignment: 'right'\n                }\n            ]\n        })\n    }\n\n    let instructionsRegOwned:any = () => {return({\n        text: [{text: 'Registration Volunteers: ', italics: true, bold: true}, 'Check off each participant in the first column when they arrive. Please verify course assignment, epunch number, contact, and vehicle information. Collect any money owed and cross out in the owed column when paid.'],\n        margin: [0,0,0,10] // bottom only\n    })};\n\n    let instructionsRegRent:any = () => {return({\n        text: [{text: 'Registration Volunteers: ', italics: true, bold: true}, 'Check off each participant in the first column when they arrive. Write the rental epunch number in the large box but do not check the shaded box. Please verify course assignment, contact, and vehicle information. Collect any money owed and cross out in the owed column when paid.'],\n        margin: [0,0,0,10] // bottom only\n    })};\n    \n    let instructionsFinishRent:any = () => {return({\n        text: [{text: 'Finish Volunteers: ', italics: true, bold: true}, 'Find any epunch numbers that haven\\'t been checked off. Find the corresponding registration in the computer, add the epunch number from this page, and check it off. Return this list to registration.'],\n        margin: [0,0,0,10] // bottom only\n    })};\n\n    let tableLayoutRent:any = () => {return(\n        {\n            fillColor: function (rowIndex:number) {\n                return (rowIndex % 2 === 1) ? '#EEEEEE' : null;\n            },\n            paddingLeft: function() { return 4; },\n            paddingRight: function() { return 4; },\n            paddingTop: function() { return 2; },\n            paddingBottom: function() { return 2; },\n            hLineWidth(i:number, node:any) {\n                if (i === 0 || i === node.table.body.length) {\n                    return 0;\n                }\n                return (i === node.table.headerRows) ? 2 : 1;\n            },\n            vLineWidth() {\n                return 0;\n            },\n            hLineColor(i:number) {\n                return i === 1 ? 'black' : 'white';\n            },\n        }\n    )};\n\n    let tableLayoutOwned:any = () => {return(\n        {\n            fillColor: function (rowIndex:number) {\n                return (rowIndex % 2 === 1) ? '#EEEEEE' : null;\n            },\n            paddingLeft: function() { return 4; },\n            paddingRight: function() { return 4; },\n            paddingTop: function() { return 6; },\n            paddingBottom: function() { return 4; },\n            hLineWidth(i:number, node:any) {\n                if (i === 0 || i === node.table.body.length) {\n                    return 0;\n                }\n                return (i === node.table.headerRows) ? 2 : 0;\n            },\n            vLineWidth() {\n                return .5;\n            },\n            hLineColor(i:number) {\n                return i === 1 ? 'black' : 'white';\n            },\n            vLineColor() {\n                return 'white';\n            }\n        }\n    )};\n\n    function nowtimestring():string {\n        const now:Date = new Date();\n        const y = now.getFullYear().toString();\n        // const m = (now.getMonth() + 1).toString().padStart(2, \"0\");\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        const month = monthNames[now.getMonth()];\n        const d = now.getDate().toString().padStart(2, \"0\");\n        const dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        const day = dayNames[now.getDay()];\n        const H = now.getHours().toString().padStart(2, \"0\");\n        const M = now.getMinutes().toString().padStart(2, \"0\");\n        return H.concat(':',M,' ',day,' ',d,' ',month,', ',y);\n      }\n\n    const docDefinitionOwned:TDocumentDefinitions = {\n        pageSize: 'LETTER',\n        pageOrientation: 'landscape',\n        footer: buildfooter,\n        content: [\n            header('Pre-Registration List: OWNED punches'),\n            instructionsRegOwned(),\n            {\n                layout: tableLayoutOwned(),\n                table: {\n                    headerRows: 1,\n                    dontBreakRows: true,\n                    body: tablebodyowned\n                },\n            }\n        ]\n    }\n\n    const docDefinitionRented1:TDocumentDefinitions = {\n        pageSize: 'LETTER',\n        pageOrientation: 'landscape',\n        footer: buildfooter,\n        content: [\n            header('Pre-Registration List: RENTAL punches (list A)'),\n            instructionsRegRent(),\n            instructionsFinishRent(),\n            {\n                layout: tableLayoutRent(),\n                table: {\n                    headerRows: 1,\n                    body: tablebodyrented\n                },\n            },\n        ]\n    }\n\n    const docDefinitionRented2:TDocumentDefinitions = {\n        pageSize: 'LETTER',\n        pageOrientation: 'landscape',\n        footer: buildfooter,\n        content: [\n            header('Pre-Registration List: RENTAL punches (list B)'),\n            instructionsRegRent(),\n            instructionsFinishRent(),\n            {\n                layout: tableLayoutRent(),\n                table: {\n                    headerRows: 1,\n                    body: tablebodyrented2\n                },\n            },\n        ]\n    }\n\n    return([\n        {\n            name: \"Owned\", \n            doc: pdfMake.createPdf(docDefinitionOwned, {}, fonts)\n        }, \n        {\n            name: \"RentalA\", \n            doc: pdfMake.createPdf(docDefinitionRented1, {}, fonts)\n        },\n        {\n            name: \"RentalB\", \n            doc: pdfMake.createPdf(docDefinitionRented2, {}, fonts)\n        }\n    ]);\n}\n\n\nfunction buildRegPdfRow(entry:LtEntry): any[]{\n    const row = [\n        {\n            table: {\n                widths: [12],\n                heights: [10],\n                body: [[{\n                    text: entry.Owed > 0? {\n                        text:'$'.concat(entry.Owed.toString()), color:'#999999',\n                        fontSize: 7}: \" \", \n                    border: [true, true, true, true]}\n                ]]\n            }\n        },\n        {text: entry.FirstName, fontSize: 11},\n        {text: entry.LastName, fontSize: 11},\n        entry.Owed > 0? {text:'$'.concat(entry.Owed.toString()), fontSize: 11, bold:true}: \"\",\n        {text: entry.ClassId, fontSize: 11},\n        entry.Epunch.length === 0 ? \n            {\n                table: {\n                    widths: [100],\n                    heights: [25],\n                    body: [[{\n                        columns: [\n                            {\n                                width: '*',\n                                text: ' '\n                            },\n                            {\n                                width: 'auto',\n                                text: '     ',\n                                lineHeight: 1.45,\n                                background: '#CCCCCC'\n                            }\n                        ],\n                    }]]\n                },\n                layout: {\n                    hLineWidth() {\n                        return 1.5;\n                    },\n                    vLineWidth() {\n                        return 1.5;\n                    },\n                    hLineColor() {\n                        return 'black';\n                    },\n                    vLineColor() {\n                        return 'black';\n                    },\n                    paddingTop() {\n                        return 2;\n                    },\n                    paddingBottom() {\n                        return -2;\n                    },\n                    paddingRight() {\n                        return 2;\n                    }\n                }\n            }:\n            {text: entry.Epunch, fontSize: 11, alignment:'right'},\n        {text: entry.Club, fontSize: 11},\n        {text: formatPhoneNumber(entry.Phone), fontSize: 11, noWrap:true},\n        {text: formatPhoneNumber(entry.EmergencyPhone), fontSize: 11, noWrap:true  },\n        {text: entry.CarLicense, fontSize: 8}\n    ]\n    return(row);\n}\n\n// https://stackoverflow.com/questions/8358084/regular-expression-to-reformat-a-us-phone-number-in-javascript/41318684\nfunction formatPhoneNumber(phoneNumberString:string) {\n    var cleaned = ('' + phoneNumberString).replace(/\\D/g, '');\n    var match = cleaned.match(/^(1|)?(\\d{3})(\\d{3})(\\d{4})$/);\n    if (match) {\n      return ['(', match[2], ') ', match[3], '-', match[4]].join('');\n    }\n    return cleaned;\n  }","import React from 'react';\nimport Papa from 'papaparse';\nimport { Button, ButtonGroup, ButtonToolbar, Col, Dropdown, DropdownButton, Form, FormControl, Row } from 'react-bootstrap';\nimport { BasicDz } from '../dz';\nimport * as SS from '../../orienteering/SportSoftware'\nimport { LtEntry, parseEnties } from '../../lt/Entry';\nimport { PageTitle } from '../PageTitle';\nimport {Entry} from './Entry';\nimport {EntryFile, entryFileMeta} from './EntryFile';\nimport { RegistrationClassCount } from './RegistrationClassCount';\nimport { buildCheckInPdf } from '../../orienteering/RegistrationCheckinPdf';\n\ntype myformstate = {\n    filesprocessed: entryFileMeta[],\n    entries: LtEntry[],\n    nextstartno: number,\n    pdftextvalue: string\n  }\n\nexport class EntryProcessor extends React.Component<{}, myformstate, {}> {\n    constructor(props:{}) {\n      super(props);\n      this.state = {\n        filesprocessed: [],\n        entries: [],\n        nextstartno: 1000,\n        pdftextvalue: ''\n      }\n      \n      this.downloadOeRegCsv = this.downloadOeRegCsv.bind(this);\n      this.updateEntries = this.updateEntries.bind(this);\n      this.handleClearEntries = this.handleClearEntries.bind(this);\n      this.nowtimestring = this.nowtimestring.bind(this);\n      this.downloadpdf = this.downloadpdf.bind(this);\n      this.onpdftextchange = this.onpdftextchange.bind(this);\n    }\n  \n    handleClearEntries() {\n      this.setState({entries: [], filesprocessed: []});\n    }\n  \n    downloadOeRegCsv(isScoreO:boolean=false) {\n      if (this.state.entries.length === 0) {\n        console.log(\"No entries\");\n        return\n      }\n  \n      const forexport = SS.fromLtEntries(this.state.entries)\n  \n      // export assigns start numbers to the LtEntry, so update state here\n      this.setState({entries: this.state.entries});\n  \n      const unparseconfig:Papa.UnparseConfig = {\n        quotes: false,\n        delimiter: \";\",\n        header: true,\n        skipEmptyLines: \"greedy\",\n        columns: isScoreO ? SS.COLUMNS_SCOREO : SS.COLUMNS_STANDARD\n      }\n  \n      const csvstring:string = Papa.unparse(forexport, unparseconfig);\n      const nowstring:string = this.nowtimestring();\n      const el = document.createElement('a');\n      el.href = 'data:text/csv;charset=utf-8,' + encodeURI(csvstring);\n      el.target = '_blank';\n      el.download = 'EntriesForOe-'.concat(nowstring, '.csv');\n      el.click();\n    }\n  \n    nowtimestring():string {\n      const now:Date = new Date();\n      const y = now.getFullYear().toString();\n      const m = (now.getMonth() + 1).toString().padStart(2, \"0\");\n      const d = now.getDate().toString().padStart(2, \"0\");\n      const H = now.getHours().toString().padStart(2, \"0\");\n      const M = now.getMinutes().toString().padStart(2, \"0\");\n      return y.concat(m, d, 'T', H, M);\n    }\n  \n    updateEntries(file:File) {\n      Papa.parse(file, {\n              header: true,\n              transform: (value, col) => {return(value.replace(/\\0/g, '').trim())},\n              complete: (results, file:File) => {\n        const parsed = parseEnties(results.data, this.state.nextstartno);\n        const newentries = this.state.entries.concat(parsed.data);\n        this.setState({entries: newentries, nextstartno: parsed.meta.maxstartno})\n  \n        const newfile:entryFileMeta = {\n          name: file.name,\n          success: parsed.meta.success,\n          failed: parsed.meta.failed,\n          empty: parsed.meta.empty\n        };\n        this.setState({\n          filesprocessed: [...this.state.filesprocessed, newfile]\n        });\n    }\n    });\n    }\n  \n    downloadpdf(headerText:string='') {\n      const checkInPdfs = buildCheckInPdf(this.state.entries, this.state.filesprocessed.map((x) => x.name), headerText);\n      const fileTimeString = this.nowtimestring();\n      for (const pdf of checkInPdfs) {\n        const fileName:string = 'Registrations-'.concat(fileTimeString, '-', pdf.name, '.pdf');\n        pdf.doc.download(fileName); \n      }\n    }\n  \n    onpdftextchange(e:React.ChangeEvent<HTMLInputElement>) {\n      e.preventDefault();\n      this.setState({pdftextvalue:e.target.value});\n    }\n  \n    render() {\n      const entries = (this.state.entries.length > 0) ? \n        this.state.entries.map((entry) =>\n        <Entry \n          value={entry}\n        />) :\n        <tr>\n          <td colSpan={6} style={{textAlign:'center'}}>\n            No Registrations to Show\n          </td>\n        </tr>\n      ;\n  \n      const files = this.state.filesprocessed.map((filemeta) =>\n        <EntryFile\n          name={filemeta.name}\n          success={filemeta.success}\n          failed={filemeta.failed}\n          empty={filemeta.empty}\n        />\n      );\n  \n      const regclasshist = this.state.entries.reduce(function(regclasshist: {[key:string]: number}, reg:LtEntry) {\n        if (!reg.GroupLeader) {\n          return regclasshist;\n        }\n        if (!regclasshist[reg.ClassId]) {\n          regclasshist[reg.ClassId] = 1;\n        } else {\n          regclasshist[reg.ClassId]++;\n        }\n        return regclasshist;\n      }, {});\n    \n      const regmeta = Object.entries(regclasshist);\n  \n      const counts = regmeta.sort((a, b) => a[0].toLocaleLowerCase().localeCompare(b[0].toLocaleLowerCase())).map((regclass) => \n      <RegistrationClassCount\n        classname={regclass[0]}\n        regcount={regclass[1]}\n      />\n      );\n  \n      return (\n        <div>\n          <PageTitle \n            title=\"Pre-Process Registration Files\" \n          />\n          <p>\n            Save event registration information in .csv format. Upload multiple files to combine registration information from multiple sources. (Todo: click to expand for supported csv formats)\n          </p>\n          <p>\n            This tool creates outputs ready for import into SportSoftware (OE) and PDF files to print and use at check-in.\n          </p>\n          <h4>Files</h4>\n          <p>\n            <BasicDz parser={this.updateEntries} helpText=\"Drop csv file(s) here or click to open file browser.\"/>\n          </p>\n          <Row>\n            <Col xs={12} md={6}>\n              <Row>\n                <p>Files Uploaded: {this.state.filesprocessed.length}</p>\n                <p><ul>{files}</ul></p>\n                <p>Registrations by Class (Total: {this.state.entries.filter(entry => entry.GroupLeader === true).length}) <i>This total does not include group members</i>.</p>\n                <p>\n                <Row>\n                  {counts}\n                </Row>\n                </p>\n  \n              </Row>\n              <Row>\n                <ButtonToolbar>\n                  <ButtonGroup className=\"me-2\">\n                    <DropdownButton title=\"Download OE File\" \n                      variant=\"primary\"\n                      disabled={this.state.entries.length > 0 ? false:true}>\n                      <Dropdown.Item onClick={() => this.downloadOeRegCsv()}>Regular</Dropdown.Item>\n                      <Dropdown.Item onClick={() => this.downloadOeRegCsv(true)}>Score O</Dropdown.Item>\n                    </DropdownButton>\n                  </ButtonGroup>\n                  <ButtonGroup className=\"me-2\">\n                  <Dropdown>\n                    <Dropdown.Toggle className={this.state.entries.length > 0 ? \"\":\"disabled\"}>\n                      Download Check-In PDFs\n                    </Dropdown.Toggle>\n                    <Dropdown.Menu style={{ minWidth: '20rem' }}>\n                      <Dropdown.ItemText>Additional Custom Header Text:</Dropdown.ItemText>\n                      <Row className=\"justify-content-center\">\n                        <Col xs={12}>\n                          <Form \n                            style= {{marginRight: '16px', marginLeft: '16px'}}\n                            onSubmit={(e) => {e.preventDefault(); this.downloadpdf(this.state.pdftextvalue)}}>\n                            <FormControl type='text' onChange={this.onpdftextchange} value={this.state.pdftextvalue}></FormControl>\n                            <Button style= {{marginTop: '8px'}} type='submit' disabled={this.state.entries.length > 0 ? false:true}>Download PDFs</Button>\n                          </Form>\n                        </Col>\n                      </Row>\n                    </Dropdown.Menu>\n                  </Dropdown>\n                  </ButtonGroup>\n                  <ButtonGroup>\n                    <Button \n                      variant=\"outline-secondary\" \n                      onClick={this.handleClearEntries}>\n                      Clear Registrations\n                    </Button>\n                  </ButtonGroup>\n                </ButtonToolbar>\n              </Row>\n            </Col>\n            <Col xs={6} md={6}>\n  \n              <table style={{textAlign: 'left'}}>\n                <thead>\n                  <tr>\n                    <th>First</th>\n                    <th>Last</th>\n                    <th>Group</th>\n                    <th>Chip</th>\n                    <th>Rented?</th>\n                    <th>Class</th>\n                    <th>Start #</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {entries}\n                </tbody>\n              </table>\n            </Col>\n          </Row>\n        </div>\n      );\n    }\n  }","import React from 'react';\nimport { ltEvent } from '../../lt/Event';\nimport { filledRaceResult, ltEventClassSingleRace, singleTeamResult } from '../../lt/EventClassSingleRace';\n\n\ntype RaceDetailsFormProps = {\n    event: ltEvent\n}\n\ntype RaceDetailsFormState = {\n    error: Error|null,\n    isLoaded: Boolean,\n    races: ltEventClassSingleRace[]\n}\n\ntype ResultsByTeam = {\n    [key:string] : filledRaceResult[]\n}\n\nexport class RaceDetailsForm extends React.Component<RaceDetailsFormProps, RaceDetailsFormState, {}> {\n\n    constructor(props:RaceDetailsFormProps) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded:false, \n            races:[]\n        };\n    }\n\n    getRaceClasses() {\n        fetch('/api/events/' + this.props.event.id + '/classes')\n        .then((res) => res.json())\n        .then((result) => {\n            this.setState({\n                races:result, \n                isLoaded:true\n            });\n        },\n        (error) => {\n            this.setState({\n                isLoaded: true,\n                error:error\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.getRaceClasses();\n    }\n\n    formatTimeString(result:filledRaceResult) {\n        var res = '';\n        if (result.result.finish_status === 'MissingPunch') {\n            res += ' msp'\n        } else if (result.result.finish_status === 'DidNotFinish') {\n            res += ' dnf'\n        } else if (result.result.finish_status === 'NotCompeting') {\n            res += ' nc'\n        } else if (result.result.finish_status === 'OverTime') {\n            res += ' ovt'\n        } else if (result.result.finish_status === 'Disqualified') {\n            res += ' DQ'\n        }\n        res += ' ' + this.formatTimeMMMSS(result.time)\n        return res\n    }\n\n    formatTimeMMMSS(seconds:number) {\n        if (!seconds) {\n            return \"--:--\";\n        }\n        const m = Math.floor(seconds / 60).toString();\n        const s = (seconds % 60).toString().padStart(2, '0');\n        return `${m}:${s}`;\n    }\n\n    compareResults(a:filledRaceResult, b:filledRaceResult) {\n        if (a.entry.competitive && b.entry.competitive) {\n            if (a.result.finish_status === 'OK' && b.result.finish_status === 'OK') {\n                if (a.time && b.time) {\n                    if (a.time < b.time) {\n                        return -1; // lower time is faster, order first\n                    } \n                    else if (a.time > b.time) {\n                        return 1;\n                    } \n                    else {\n                        return 0;\n                    }\n                }\n                // never expect to hit cases with ok status but no time:\n                else if (a.time) {\n                    return -1;\n                }\n                else if (b.time) {\n                    return 1;\n                }\n                else {\n                    return 0;\n                }\n            }\n            else if (a.result.finish_status === 'OK') {\n                return -1;\n            }\n            else if (b.result.finish_status === 'OK') {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        }\n        else if (a.entry.competitive) {\n            return -1;\n        }\n        else if (b.entry.competitive) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n\n    compareResultsByScore(a:filledRaceResult, b:filledRaceResult) {\n        if (a.score && b.score) {\n            return b.score - a.score\n        } else if (a.score) {\n            return -1\n        } else if (b.score) {\n            return 1\n        } else {\n            return 0\n        }\n    }\n\n    compareTeamResults(a:singleTeamResult, b:singleTeamResult) {\n        if (a.score !== b.score) {\n            return (b.score - a.score)\n        } else {\n            return (0)\n        }\n    }\n\n    combineResultsForEventClasses(eventresults:ltEventClassSingleRace[]) {\n        const neweventresults = eventresults.reduce<ltEventClassSingleRace[]>((acc, result) => {\n            if (!acc.some(el => el.eventclass_id === result.eventclass_id)) {\n                acc.push(result)\n            } else {\n                const toadd = acc.findIndex(el => el.eventclass_id === result.eventclass_id)\n                acc[toadd].raceresults.push(...result.raceresults)\n            }\n            return acc\n        }, [])\n        return neweventresults\n    }\n\n    buildTeams(results:filledRaceResult[]) {\n        const resultsByTeam = results.reduce<ResultsByTeam>((acc, result) => {\n            if (!acc[result.entry.club]) {\n                acc[result.entry.club] = []\n            }\n            acc[result.entry.club].push(result)\n            return acc;\n        }, {} as ResultsByTeam)\n\n        var res:singleTeamResult[] = []\n        Object.entries(resultsByTeam).forEach(team => {\n            const [club, results] = team;\n            const top = results.sort(this.compareResultsByScore).slice(0,3);\n            res.push({\n                club: club,\n                score: top.reduce<number>((prev, result) => {if(result.score === undefined) {return(prev)} return (prev+result.score)}, 0),\n                results: top\n            });\n        })\n        return(res)\n    }\n\n    assignIndvScores(results:filledRaceResult[]) {\n        results\n            .filter(result=>result.result.finish_status==='OK' && result.entry.competitive)\n            .sort(this.compareResults)\n            .map((result, index, array) => {\n               \n                if (result.result.finish_status !== 'OK') {\n                    result.pos = undefined\n                } else if (index === 0 || this.compareResults(result, array[index-1]) !== 0) {\n                    // first or different from previous, add 1 to convert index to position\n                    result.pos = (index+1)\n                } else {\n                    for (var i = index-1; i >= 0; i--) {\n                        // look backwards until front of array, or find a value that is not equal\n                        if (i === 0) {\n                            result.pos = (i+1)\n                            break;\n                        }\n                        if (this.compareResults(result, array[i]) !== 0) {\n                            // when find index of non-equal item, step forward 1,\n                            // then add 1 to convert index to position.\n                            result.pos = (i+1+1)\n                            break;\n                        }\n                    }\n                }\n\n                if (result.pos === undefined) {\n                    result.score = undefined;\n                } else if (result.pos === 1) {\n                    result.score = 100;\n                } else if (result.pos === 2) {\n                    result.score = 95;\n                } else if (result.pos === 3) {\n                    result.score = 92;\n                } else {\n                    result.score = (94 - result.pos)\n                }\n\n                return(result);\n            })\n\n        results.filter(result=>result.result.finish_status==='MissingPunch' || result.result.finish_status==='DidNotFinish')\n            .map(res =>{\n                res.score = 0\n                return(res);\n            })\n        return(results);\n    }\n\n    render () {\n\n    const {error, isLoaded, races} = this.state;\n\n    races.filter(race=>race.event_scoring==='RaceScoring').forEach(race => {\n        race.raceresults = this.assignIndvScores(race.raceresults)\n    })\n\n    const indvClasses = races.filter(race=>race.event_scoring==='RaceScoring').map(race => (\n        <div>\n        <h3>{race.name}</h3>\n        <table>\n            <tr>\n                <th>Pos.</th>\n                <th>Name</th>\n                <th>Club</th>\n                <th>Time</th>\n                <th>Score</th>\n            </tr>\n            {race.raceresults.map(result => {\n                if (race.race_scoring === 'WorldCup') {\n                    return(\n                        <tr>\n                            <td>{result.pos?.toString()}</td>\n                            <td>{result.entry.person}</td>\n                            <td>{result.entry.club}</td>\n                            <td style={{textAlign: \"right\"}}>{this.formatTimeString(result)}</td>\n                            <td style={{textAlign: \"right\"}}>{result.score?.toString()}</td>\n                        </tr>\n                    )\n                } else {\n                    return(\n                        <tr>\n                            <td>{result.pos?.toString()}</td>\n                            <td>{result.entry.person}</td>\n                            <td>{result.entry.club}</td>\n                            <td style={{textAlign: \"right\"}}>{this.formatTimeString(result)}</td>\n                            <td></td>\n                        </tr>\n                    )\n                }\n            })}\n        </table>\n        </div>\n    ))\n    \n    races.filter(race=>race.event_scoring==='WIOLTeams').forEach(race => {\n        race.raceresults = this.assignIndvScores(race.raceresults).filter(res => res.score !== undefined)\n    });\n\n    const teamClassesToProcess = this.combineResultsForEventClasses(races.filter(race=>race.event_scoring==='WIOLTeams'))\n    \n    teamClassesToProcess.forEach(race => {\n        race.teamresults = this.buildTeams(race.raceresults).sort(this.compareTeamResults)\n    });\n\n    const teamClasses = teamClassesToProcess.map(race => (\n        <div>\n        <h3>{race.name}</h3>\n        <table>\n            <tr>\n                <th>Pos.</th>\n                <th>Name</th>\n                <th>Club</th>\n                <th>Score</th>\n            </tr>\n            {race.teamresults?.map(result => {\n                return(\n                    <React.Fragment>\n                    <tr>\n                        <td></td>\n                        <td>{result.club}</td>\n                        <td>{result.club}</td>\n                        <td>{result.score}</td>\n                    </tr>\n                    {result.results.map(result => {\n                        return(\n                            <tr>\n                                <td></td>\n                                <td>{result.entry.person}</td>\n                                <td>{result.entry.club}</td>\n                                <td>{result.score}</td>\n                            </tr>\n                        )\n                    })}\n                    </React.Fragment>\n                )\n            })}\n        </table>\n        </div>\n    ))\n\n\n    if (error) {\n        return (<div>Error: {error.message}</div>)\n    } else if (!isLoaded) {\n        return(<div>Loading...</div>)\n    } else {\n        return (\n            <div>\n                <ul>\n                    <li>Event Name: {this.props.event.name}</li>\n                    <li>Event Key: {this.props.event.api_key}</li>\n                </ul>\n                <p>Classes</p>\n\n                {indvClasses}\n\n                {teamClasses}\n\n\n            </div>\n        );\n    }\n    }\n}","import React from 'react';\nimport { ltEvent } from '../../lt/Event';\nimport { BasicDz } from '../dz';\nimport { PageTitle } from '../PageTitle';\nimport { RaceDetailsForm } from './RaceDetailsForm';\n\ntype resultsprocessingstate = {\n    event: ltEvent|null\n    isProcessing: boolean\n  }\n\nexport class ResultsProcessor extends React.Component<{}, resultsprocessingstate, {}> {\n\n    constructor(props:{}) {\n        super(props);\n        this.state = {\n            event: null,\n            isProcessing: false\n        }\n    }\n\n    loadNewResults = (file:File) => {\n        console.log(file.name);\n        this.setState({isProcessing:true})\n        var formData = new FormData();\n        formData.append('file', file);\n        \n        fetch('/api/race', {\n            method: 'POST',\n            body: formData})\n        .then((res) => res.json())\n        .then((result) => {\n            console.log(result);\n            this.setState({event:result.event, isProcessing:false});\n        });\n    }\n\n    render () {\n        if (this.state.event === null && !this.state.isProcessing) {\n            return (<div>\n                <PageTitle \n                    title=\"Process Results Files\" \n                />\n                <p>\n                    Save event results using the IOF XML v3 format. Upload here, then follow the prompts to set scoring methods.\n                </p>\n                <div>\n                <h4>Files</h4>\n                <p>\n                    <BasicDz parser={this.loadNewResults} helpText=\"Drop xml file here or click to open file browser.\"/>\n                </p>\n                </div>\n            </div>)\n        } else if (this.state.event !== null) {\n            return (<div>\n                <PageTitle \n                    title=\"Process Results Files\" \n                />\n                <div>\n                <RaceDetailsForm event={this.state.event}/>\n                </div>\n            </div>)\n        } else {\n            return(<div>\n                <h4>Processing...</h4>\n                <p>Please be patient, this can take a minute or two.</p>\n                </div>)\n        }\n    }\n}","import React from 'react';\nimport { PageTitle } from '../PageTitle';\nimport { ltEvent } from '../../lt/Event';\nimport { Button } from 'react-bootstrap';\n\ntype resultspagestate = {\n    error: Error|null,\n    isLoaded: Boolean\n    events: ltEvent[]\n  }\n\n\nexport class Results extends React.Component<{}, resultspagestate, {}> {\n\n    constructor(props:{}) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            events: []\n        }\n    }\n\n    getEvents() {\n        fetch('/api/events')\n        .then(res => res.json())\n        .then((result) => {\n            this.setState({\n                events: result,\n                isLoaded: true\n            });\n        },\n        (error) => {\n            this.setState({\n                isLoaded: true,\n                error:error\n            });\n        }\n        )\n    }\n\n\n    componentDidMount() {\n        this.getEvents();\n    }\n\n    render () {\n    const {error, isLoaded } = this.state;\n    if (error) {\n        return (<div>Error: {error.message}</div>)\n    } else if (!isLoaded) {\n        return(<div>Loading...</div>)\n    } else {\n        return (\n            <div>\n                <PageTitle \n                    title=\"Lost Time Orienteering\"\n                />\n                <p>\n                    <Button href=\"/registrations\">Process Registrations</Button>\n                    <Button href=\"/results\">Process Results</Button>\n                </p>\n                {/* <p>\n                    Events\n                </p> */}\n                {/* <ul>\n                    {events.map(event => (\n                        <li key={event.id}>\n                            {event.name}\n                        </li>\n                    ))}\n                </ul> */}\n            </div>\n        );\n    }\n    }\n}","import './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport { Col, Container} from 'react-bootstrap';\nimport { Header } from './components/Header';\nimport {EntryProcessor} from './components/adminentries/EntryProcessor';\nimport { ResultsProcessor } from './components/adminresults/ResultsProcessor';\nimport { Results } from './components/results/Results';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container fluid style={{\n        backgroundColor: '#F7F7F7',\n        paddingLeft: 0,\n        paddingRight: 0,\n        minHeight: '100vh'\n      }}>\n        <Header />\n          <Col xs={{span:10, offset:1}}>\n            <Switch>\n              <Route exact path=\"/\">\n                <Results />\n              </Route>\n              <Route path=\"/registrations\">\n                <EntryProcessor />\n              </Route>\n              <Route path=\"/results\">\n                <ResultsProcessor />\n              </Route>\n            </Switch>\n          </Col>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}