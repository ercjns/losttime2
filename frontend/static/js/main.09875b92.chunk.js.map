{"version":3,"sources":["components/dz.tsx","orienteering/SportSoftware.ts","orienteering/WiolEntry.ts","orienteering/CascadeRegistration.ts","lt/Entry.ts","assets/LostTimeWordmark.svg","assets/mapmontageblur.jpg","components/Header.tsx","components/PageTitle.tsx","components/Entry.tsx","components/EntryFile.tsx","components/RegistrationClassCount.tsx","orienteering/RegistrationCheckinPdf.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BasicDz","props","onDrop","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","fontStyle","outline","transition","activeStyle","acceptStyle","rejectStyle","files","console","log","i","length","parser","setState","state","this","getRootProps","getInputProps","className","style","Component","fromLtEntries","entries","nextstartno","OeEntries","maxstartnoinuse","Math","max","map","o","StartNo","e","GroupLeader","push","convertFromLtEntry","entry","Error","Stno","Chipno","Epunch","toString","Surname","LastName","FirstName","S","Sex","nc","NonCompetitive","Classifier","City","Club","Short","ClassId","Rented","EpunchRented","Paid","COLUMNS_STANDARD","COLUMNS_SCOREO","isWiolEntryCsv","row","Object","keys","isCascadeRegistrationCsv","LtEntry","Course","Phone","EmergencyPhone","CarLicense","Newcomer","Group","Owed","Rent","School","NC","Gen","EPunch","Class","Header","Row","backgroundImage","mapblur","backgroundRepeat","marginBottom","Col","xs","span","offset","paddingTop","paddingBottom","href","src","wordmark","alt","height","margin","React","PageTitle","title","width","marginTop","Entry","value","textAlign","EntryFile","failed","name","success","RegistrationClassCount","sm","md","lg","classname","regcount","buildCheckInPdf","userHeaderText","fonts","Roboto","normal","bold","italics","bolditalics","tablebodyowned","text","noWrap","tablebodyrented","tablebodyrented2","GroupLeaders","filter","ownedepunchentries","buildRegPdfRow","rentalepunchentries","rentalepunchentries2","lastNameSort","a","b","localeCompare","header","pageTitle","columns","fontSize","buildfooter","currentPage","pageCount","nowtimestring","alignment","sort","instructionsRegOwned","instructionsRegRent","instructionsFinishRent","tableLayoutRent","fillColor","rowIndex","paddingLeft","paddingRight","hLineWidth","node","table","body","headerRows","vLineWidth","hLineColor","tableLayoutOwned","vLineColor","now","Date","y","getFullYear","month","getMonth","d","getDate","padStart","day","getDay","H","getHours","M","getMinutes","concat","docDefinitionOwned","pageSize","pageOrientation","footer","content","layout","dontBreakRows","docDefinitionRented1","docDefinitionRented2","doc","pdfMake","widths","heights","border","lineHeight","background","formatPhoneNumber","phoneNumberString","cleaned","replace","match","join","EntryProcessor","filesprocessed","pdftextvalue","downloadOeRegCsv","bind","updateEntries","handleClearEntries","downloadpdf","onpdftextchange","isScoreO","forexport","SS","unparseconfig","quotes","delimiter","skipEmptyLines","csvstring","Papa","unparse","nowstring","el","document","createElement","encodeURI","target","download","click","m","file","parse","transform","col","trim","complete","results","parsed","indata","nextbib","newentries","empty","fromWiolEntryCsv","fromCascadeRegistrationCsv","data","meta","maxstartno","parseEnties","newfile","headerText","checkInPdfs","x","fileTimeString","pdf","fileName","preventDefault","colSpan","filemeta","regclasshist","reduce","reg","counts","toLocaleLowerCase","regclass","ButtonToolbar","ButtonGroup","DropdownButton","variant","disabled","Dropdown","Item","onClick","Toggle","Menu","minWidth","ItemText","Form","marginRight","marginLeft","onSubmit","FormControl","type","onChange","Button","App","Container","fluid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"ySAGaA,EAAb,kDAEE,WAAYC,GAAqB,IAAD,8BAC9B,cAAMA,IAFRC,YACgC,IAchCC,UAAgB,CACdC,KAAM,EACNC,QAAS,OACTC,cAAe,SACfC,WAAY,SACZC,QAAS,OACTC,YAAa,EACbC,aAAc,GACdC,YAAa,UACbC,YAAa,SACbC,gBAAiB,YACjBC,MAAO,QACPC,UAAW,SACXC,QAAS,OACTC,WAAY,2BA5BkB,EA+BhCC,YAAkB,CAChBP,YAAa,WAhCiB,EAmChCQ,YAAkB,CAChBR,YAAa,WApCiB,EAuChCS,YAAkB,CAChBT,YAAa,WAtCb,EAAKT,OAAS,SAACmB,GACXC,QAAQC,IAAIF,GACZ,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,IAC9B,EAAKvB,MAAMyB,OAAOL,EAAMG,IAE9B,EAAKG,SAAS,CAACN,WAEjB,EAAKO,MAAQ,CACXP,MAAO,IAVqB,EAFlC,0CA6CE,WAAU,IAAD,OACP,OACE,cAAC,IAAD,CAAUnB,OAAQ2B,KAAK3B,OAAvB,SACG,gBAAE4B,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,cAAhB,OACC,yBAASC,UAAU,YAAnB,SACE,gDAASF,EAAa,CAClBE,UAAW,WACXC,MAAO,EAAK9B,aAFhB,cAIE,qCAAW4B,MACX,kGAvDd,GAA6BG,aCetB,SAASC,EAAcC,GAC5B,IACIC,EADAC,EAAyB,GAEvBC,EAAkBC,KAAKC,IAAL,MAAAD,KAAI,YAAQJ,EAAQM,KAAI,SAAAC,GAAC,OAAIA,EAAEC,QAASD,EAAEC,QAAQ,OAC1EP,EAAcE,EAAkB,KAAOA,EAAgB,EAAI,KAJG,oBAMhDH,GANgD,IAM9D,2BAAuB,CAAC,IAAfS,EAAc,QAChBA,EAAEC,cACFD,EAAED,UACLC,EAAED,QAAUP,EACZA,KAEFC,EAAUS,KAAKC,EAAmBH,MAZ0B,8BAc9D,OAAOP,EAGT,SAASU,EAAmBC,GAC1B,IAAKA,EAAML,QACT,MAAM,IAAIM,MAAM,4BAElB,MAAO,CACLC,KAAMF,EAAML,QACZQ,OAAQH,EAAMI,OAAOC,WACrB,cAAc,KACdC,QAASN,EAAMO,SACf,aAAcP,EAAMQ,UACpBC,EAAGT,EAAMU,IACTC,GAAIX,EAAMY,eAAiB,EAAE,EAC7BC,WAAY,EACZC,KAAMd,EAAMe,KACZC,MAAOhB,EAAMiB,QACbC,OAAQlB,EAAMmB,aAAe,IAAM,KACnC,YAAY,EACZC,KAAM,KAIH,IAAMC,EAAmB,CAC5B,SACA,OACA,QACA,SACA,cACA,UACA,aACA,KACA,IACA,QACA,KACA,QACA,SACA,OACA,aACA,WACA,YACA,UACA,WACA,UACA,OACA,MACA,WACA,SACA,UACA,QACA,OACA,eACA,sBACA,qBACA,OACA,iBACA,OACA,OACA,OACA,QACA,QACA,QACA,gBACA,mBACA,SACA,QACA,MACA,aACA,QACA,SACA,MACA,QACA,SACA,YACA,OACA,OACA,aACA,SACA,KACA,IACA,mBAGSC,EAAiB,CAC5B,YACA,OACA,QACA,SACA,cACA,UACA,aACA,KACA,IACA,QACA,KACA,QACA,SACA,OACA,aACA,WACA,YACA,UACA,WACA,UACA,OACA,MACA,WACA,SACA,UACA,QACA,OACA,eACA,sBACA,qBACA,OACA,iBACA,OACA,OACA,OACA,QACA,QACA,QACA,gBACA,mBACA,SACA,QACA,MACA,aACA,QACA,SACA,MACA,QACA,SACA,YACA,OACA,OACA,aACA,SACA,KACA,IACA,mB,gFCjKK,SAASC,EAAeC,GAC3B,OACgC,IAA5BC,OAAOC,KAAKF,GAAKhD,QACjB,UAAWgD,GACX,YAAaA,GACb,SAAUA,GACV,eAAgBA,GAChB,cAAeA,GACf,QAASA,GACT,WAAYA,GACZ,WAAYA,GACZ,OAAQA,ECNT,SAASG,EAAyBH,GACrC,MAEI,cAAeA,GACf,aAAcA,GACd,UAAWA,GACX,SAAUA,GACV,UAAWA,GACX,QAASA,GACT,WAAYA,GACZ,UAAWA,GACX,mBAAoBA,GACpB,eAAgBA,GAChB,aAAcA,GACd,UAAWA,GACX,SAAUA,GACV,SAAUA,ECpBX,IAAMI,EAAb,iDACIjC,aADJ,OAEIS,YAFJ,OAGIe,kBAHJ,OAIIX,eAJJ,OAKID,cALJ,OAMIQ,UANJ,OAOI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","file":"static/js/main.09875b92.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Dropzone from 'react-dropzone';\n\nexport class BasicDz extends Component<{parser:any}, {files:File[]}, {}> {\n  onDrop: (files: File[]) => void;\n  constructor(props:{parser:any}) {\n    super(props);\n    this.onDrop = (files) => {\n        console.log(files);\n        for (let i = 0; i < files.length; i++) {\n            this.props.parser(files[i]);\n        };\n      this.setState({files})\n    };\n    this.state = {\n      files: []\n    };\n  }\n\n  baseStyle:any = {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '20px',\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: 'magenta',\n    borderStyle: 'dashed',\n    backgroundColor: 'lightgrey',\n    color: 'black',\n    fontStyle: 'italic',\n    outline: 'none',\n    transition: 'border .24s ease-in-out'\n  };\n\n  activeStyle:any = {\n    borderColor: '#2196f3'\n  };\n  \n  acceptStyle:any = {\n    borderColor: '#00e676'\n  };\n  \n  rejectStyle:any = {\n    borderColor: '#ff1744'\n  };\n\n  render() {\n    return (\n      <Dropzone onDrop={this.onDrop}>\n        {({getRootProps, getInputProps}) => (\n          <section className=\"container\">\n            <div {...getRootProps({\n                className: 'dropzone',\n                style: this.baseStyle,\n                   })}>\n              <input {...getInputProps()} />\n              <p>Drop csv file(s) here or click to open file browser.</p>\n            </div>\n          </section>\n        )}\n      </Dropzone>\n    );\n  }\n}","import { LtEntry } from \"../lt/Entry\";\n\nexport type OeEntryCsv = {\n    Stno: number,\n    Chipno: string | null,\n    \"Database Id\":null,\n    Surname: string | null,\n    \"First name\": string | null\n    S: string,\n    nc: 0|1,\n    Classifier: 0,\n    City: string | null,\n    Short: string | null,\n    Rented: \"X\" | null,\n    \"Start fee\":0,\n    Paid:\"X\"\n  }\n\nexport function fromLtEntries(entries: LtEntry[]): OeEntryCsv[] {\n  let OeEntries:OeEntryCsv[] = [];\n  let nextstartno:number;\n  const maxstartnoinuse = Math.max(...entries.map(o => o.StartNo? o.StartNo:0))\n  nextstartno = maxstartnoinuse > 1001 ? maxstartnoinuse+1 : 1001;\n\n  for (let e of entries) {\n    if (!e.GroupLeader) {continue}\n    if (!e.StartNo) {\n      e.StartNo = nextstartno;\n      nextstartno++;\n    }\n    OeEntries.push(convertFromLtEntry(e));\n  }\n  return OeEntries;\n}\n\nfunction convertFromLtEntry(entry:LtEntry): OeEntryCsv {\n  if (!entry.StartNo) {\n    throw new Error('Start number is required');\n  }\n  return {\n    Stno: entry.StartNo,\n    Chipno: entry.Epunch.toString(),\n    \"Database Id\":null,\n    Surname: entry.LastName,\n    \"First name\": entry.FirstName,\n    S: entry.Sex,\n    nc: entry.NonCompetitive ? 1:0,\n    Classifier: 0,\n    City: entry.Club,\n    Short: entry.ClassId,\n    Rented: entry.EpunchRented ? \"X\" : null,\n    \"Start fee\":0,\n    Paid: \"X\"\n  }\n}\n\nexport const COLUMNS_STANDARD = [\n    \"OE0001\",\n    \"Stno\",\n    \"XStno\",\n    \"Chipno\",\n    \"Database Id\",\n    \"Surname\",\n    \"First name\",\n    \"YB\",\n    \"S\",\n    \"Block\",\n    \"nc\",\n    \"Start\",\n    \"Finish\",\n    \"Time\",\n    \"Classifier\",\n    \"Credit -\",\n    \"Penalty +\",\n    \"Comment\",\n    \"Club no.\",\n    \"Cl.name\",\n    \"City\",\n    \"Nat\",\n    \"Location\",\n    \"Region\",\n    \"Cl. no.\",\n    \"Short\",\n    \"Long\",\n    \"Entry cl. No\",\n    \"Entry class (short)\",\n    \"Entry class (long)\",\n    \"Rank\",\n    \"Ranking points\",\n    \"Num1\",\n    \"Num2\",\n    \"Num3\",\n    \"Text1\",\n    \"Text2\",\n    \"Text3\",\n    \"Addr. surname\",\n    \"Addr. first name\",\n    \"Street\",\n    \"Line2\",\n    \"Zip\",\n    \"Addr. city\",\n    \"Phone\",\n    \"Mobile\",\n    \"Fax\",\n    \"EMail\",\n    \"Rented\",\n    \"Start fee\",\n    \"Paid\",\n    \"Team\",\n    \"Course no.\",\n    \"Course\",\n    \"km\",\n    \"m\",\n    \"Course controls\"\n  ]\n\nexport const COLUMNS_SCOREO = [\n  \"OESco0001\",\n  \"Stno\",\n  \"XStno\",\n  \"Chipno\",\n  \"Database Id\",\n  \"Surname\",\n  \"First name\",\n  \"YB\",\n  \"S\",\n  \"Block\",\n  \"nc\",\n  \"Start\",\n  \"Finish\",\n  \"Time\",\n  \"Classifier\",\n  \"Credit -\",\n  \"Penalty +\",\n  \"Comment\",\n  \"Club no.\",\n  \"Cl.name\",\n  \"City\",\n  \"Nat\",\n  \"Location\",\n  \"Region\",\n  \"Cl. no.\",\n  \"Short\",\n  \"Long\",\n  \"Entry cl. No\",\n  \"Entry class (short)\",\n  \"Entry class (long)\",\n  \"Rank\",\n  \"Ranking points\",\n  \"Num1\",\n  \"Num2\",\n  \"Num3\",\n  \"Text1\",\n  \"Text2\",\n  \"Text3\",\n  \"Addr. surname\",\n  \"Addr. first name\",\n  \"Street\",\n  \"Line2\",\n  \"Zip\",\n  \"Addr. city\",\n  \"Phone\",\n  \"Mobile\",\n  \"Fax\",\n  \"EMail\",\n  \"Rented\",\n  \"Start fee\",\n  \"Paid\",\n  \"Team\",\n  \"Course no.\",\n  \"Course\",\n  \"km\",\n  \"m\",\n  \"Course controls\"\n]\n","export class WiolEntryCsv {\n    \"Bib #\"!: number;\n    \"SI Card\"!: string;\n    Rent!: \"X\" | null;\n    \"First Name\"!: string;\n    \"Last Name\"!: string;\n    Gen!: \"M\" | \"F\";\n    School!: string;\n    Course!: string;\n    NC!: \"X\" | null;\n}\n\nexport function isWiolEntryCsv(row:any): boolean {\n    return (\n        Object.keys(row).length === 9 &&\n        'Bib #' in row &&\n        \"SI Card\" in row &&\n        'Rent' in row &&\n        \"First Name\" in row &&\n        \"Last Name\" in row &&\n        'Gen' in row &&\n        'School' in row &&\n        'Course' in row &&\n        'NC' in row\n    )\n}","export class CascadeRegistrationCsv {\n    FirstName!: string;\n    LastName!: string;\n    Email!: string;\n    Club!: string;\n    Class!: string;\n    Sex!: \"F\" | \"M\";\n    EPunch!: string;\n    Phone!: string;\n    EmergencyPhone!: string;\n    CarLicense!: string;\n    Newcomer!: true | false;\n    Group!: number | '*' | null;\n    Paid!: true | false;\n    Owed!: number | null\n}\n\nexport function isCascadeRegistrationCsv(row:any): boolean {\n    if (\n        // Object.keys(row).length === 14 &&\n        'FirstName' in row &&\n        'LastName' in row &&\n        'Email' in row &&\n        'Club' in row &&\n        'Class' in row &&\n        'Sex' in row &&\n        'EPunch' in row &&\n        'Phone' in row &&\n        'EmergencyPhone' in row &&\n        'CarLicense' in row &&\n        'Newcomer' in row &&\n        'Group' in row &&\n        'Paid' in row &&\n        'Owed' in row\n    ) {\n        return true;\n    }\n    return false;\n}","import { isWiolEntryCsv, WiolEntryCsv } from \"../orienteering/WiolEntry\"\nimport { CascadeRegistrationCsv, isCascadeRegistrationCsv } from \"../orienteering/CascadeRegistration\"\n\nexport type ParseResult = {\n    data: LtEntry[],\n    meta: {\n      success: number,\n      failed: number,\n      empty: number,\n      maxstartno: number,\n    }\n  }\n\nexport class LtEntry {\n    StartNo!: number | null;\n    Epunch!: string;\n    EpunchRented!: true | false;\n    FirstName!: string;\n    LastName!: string;\n    Club!: string;\n    Course!: string;\n    ClassId!: string;\n    NonCompetitive!: true | false;\n    Sex!: \"F\" | \"M\";\n    Phone!: string;\n    EmergencyPhone!: string;\n    CarLicense!: string;\n    Newcomer!: true | false | \"unknown\";\n    Group!: number;\n    GroupLeader!: boolean;\n    Paid!: true | false | \"unknown\";\n    Owed!: number;\n\n    fromWiolEntryCsv(\n        entry: WiolEntryCsv\n    ) {\n        this.StartNo = entry[\"Bib #\"];\n        this.Epunch = entry[\"SI Card\"];\n        this.EpunchRented= (entry.Rent === 'X') ? true: false;\n        this.FirstName= entry[\"First Name\"];\n        this.LastName= entry[\"Last Name\"];\n        this.Club= entry.School;\n        this.Course= '';\n        this.ClassId= entry.Course;\n        this.NonCompetitive= (entry.NC === 'X') ? true:false;\n        this.Sex= entry.Gen;\n        this.Phone= '';\n        this.EmergencyPhone= '';\n        this.CarLicense= '';\n        this.Newcomer= \"unknown\";\n        this.Group= 1;\n        this.GroupLeader= true;\n        this.Paid= \"unknown\";\n        this.Owed= 0;\n\n        return this;\n    }\n    fromCascadeRegistrationCsv(\n        entry: CascadeRegistrationCsv,\n    ) {\n        this.StartNo = null;\n        this.Epunch = entry.EPunch\n        this.EpunchRented= (entry.EPunch === '' && entry.Group !== '*') ? true:false;\n        this.FirstName= entry.FirstName\n        this.LastName= entry.LastName\n        this.Club= entry.Club\n        this.Course= '';\n        this.ClassId= entry.Class;\n        this.NonCompetitive= false;\n        this.Sex= entry.Sex\n        this.Phone= entry.Phone\n        this.EmergencyPhone= entry.EmergencyPhone;\n        this.CarLicense= entry.CarLicense\n        this.Newcomer= entry.Newcomer\n        this.Group= (entry.Group) ? (entry.Group === '*' ? 0 : entry.Group): 1;\n        this.GroupLeader= (entry.Group === '*') ? false : true;\n        this.Paid= entry.Paid\n        this.Owed= (entry.Owed) ? entry.Owed: 0;\n\n        return this;\n    }\n}\n\nexport function parseEnties(indata:any[], nextbib?:number): ParseResult {\n\n    const newentries:LtEntry[] = [];\n    let empty = 0;\n    let failed = 0;\n    for (const row of indata) {\n\n        if (isWiolEntryCsv(row)) {\n            const e = new LtEntry().fromWiolEntryCsv(row);\n            newentries.push(e);\n            continue;\n        } else if (isCascadeRegistrationCsv(row)) {\n            const e = new LtEntry().fromCascadeRegistrationCsv(row);\n            newentries.push(e);\n            continue;\n        } else if (Object.keys(row).length <= 1) {\n            console.log(Object.keys(row))\n            console.log('empty row');\n            empty += 1;\n            continue;\n        } else {\n            console.log(Object.keys(row))\n            console.log('failed to parse row');\n            failed += 1;\n        }\n    }\n\n    return {\n        data: newentries,\n        meta: {\n            success: newentries.length,\n            failed: failed,\n            empty: empty,\n            maxstartno: Math.max(...newentries.map(o => o.StartNo? o.StartNo:1001))\n        }\n    }\n}","export default __webpack_public_path__ + \"static/media/LostTimeWordmark.2977d17a.svg\";","export default __webpack_public_path__ + \"static/media/mapmontageblur.c977ea5b.jpg\";","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport wordmark from  '../assets/LostTimeWordmark.svg';\nimport mapblur from '../assets/mapmontageblur.jpg';\n\nexport class Header extends React.Component<{}, {}, {}> {\n\n  render () {\n  return (\n    <Row>\n    <nav className=\"nav-bar\" style={{\n      backgroundImage: `url(${mapblur})`,\n      backgroundRepeat: 'repeat-xy',\n      marginBottom: '20px'\n    }}>\n      <Col xs={{span:10, offset:1}}>\n        <div className=\"nav-img\" style={{\n          paddingTop: '5px',\n          paddingBottom: '5px'\n        }}>\n          <a href=\"/\">\n            <img src={wordmark} alt=\"Lost Time Orienteering\" style={{\n              height: '60px',\n              margin: '0px'\n            }}></img>\n          </a>\n        </div>\n      </Col>\n    </nav>\n    </Row>\n  );\n  }\n}","import React from 'react';\n\nexport class PageTitle extends React.Component<{title: string}, {}, {}> {\n\n  render () {\n  return (\n    <div>\n    <h2 style={{\n\n    }}>\n        {this.props.title}\n    </h2>\n    <div style={{\n        width: '100%',\n        height: '2px',\n        backgroundColor: 'magenta',\n        marginTop: '10px',\n        marginBottom: '10px'\n    }}>\n    </div>\n    </div>\n  );\n  }\n\n}","import React from 'react';\nimport { LtEntry } from '../lt/Entry';\n\nexport class Entry extends React.Component<{value: LtEntry}, {}, {}> {\n\n  render () {\n  return (\n    <tr>\n      <td>{this.props.value.FirstName}</td>\n      <td>{this.props.value.LastName}</td>\n      <td>{(this.props.value.Group > 1 )? \"Lead (\" + this.props.value.Group + \")\": (this.props.value.Group < 1 )? \"Member\": \"\"}</td>\n      <td>{this.props.value.Epunch}</td>\n      <td style={{textAlign:'center'}}>{this.props.value.EpunchRented? \"yes\": \"no\"}</td>\n      <td>{this.props.value.ClassId}</td>\n      <td>{this.props.value.StartNo}</td>\n    </tr>\n  );\n  }\n\n}","import React from 'react';\n\nexport type entryFileMeta = {\n    name: string,\n    success: number,\n    failed: number,\n    empty: number\n  }\n\nexport class EntryFile extends React.Component<entryFileMeta, {}, any> {\n\n  render () {\n    if (this.props.failed > 0) {\n      return <li>{this.props.name} (Found: {this.props.success}, Failed: {this.props.failed})</li>\n    }\n    return (\n      <li>{this.props.name} (Found: {this.props.success})</li>\n    )\n  }\n}","import React from 'react';\nimport { Col } from 'react-bootstrap';\n\nexport class RegistrationClassCount extends React.Component<{classname:string, regcount:number}, {}, {}> {\n\n  render () {\n    return (\n      // <li>\n      //   <b>{this.props.classname}</b>: {this.props.regcount}\n      // </li>\n      <Col xs={4} sm={3} md={4} lg={3}><b>{this.props.classname}</b>: {this.props.regcount}</Col>\n\n    )\n  }\n}","import { LtEntry } from \"../lt/Entry\";\nimport * as pdfMake from \"pdfmake/build/pdfmake\";\nimport { TDocumentDefinitions, TFontDictionary } from 'pdfmake/interfaces';\n\nexport function buildCheckInPdf(entries:LtEntry[], files:String[], userHeaderText:string=''): {name:string, doc:pdfMake.TCreatedPdf}[] {\n    \n    const fonts:TFontDictionary = {\n        // download default Roboto font from cdnjs.com\n     Roboto: {\n       normal: 'https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/fonts/Roboto/Roboto-Regular.ttf',\n       bold: 'https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/fonts/Roboto/Roboto-Medium.ttf',\n       italics: 'https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/fonts/Roboto/Roboto-Italic.ttf',\n       bolditalics: 'https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/fonts/Roboto/Roboto-MediumItalic.ttf'\n     },\n    }\n    \n    const tablebodyowned: any[][] = [[' ', 'First', 'Last', 'Owed', 'Course', 'Epunch', 'Club', 'Phone', {text:'Emergency. Ph.', noWrap:true}, 'Vehicle']]\n    const tablebodyrented: any[][] = [[' ', 'First', 'Last', 'Owed', 'Course', 'Epunch', 'Club', 'Phone', {text:'Emergency. Ph.', noWrap:true}, 'Vehicle']]\n    const tablebodyrented2: any[][] = [[' ', 'First', 'Last', 'Owed', 'Course', 'Epunch', 'Club', 'Phone', {text:'Emergency. Ph.', noWrap:true}, 'Vehicle']]\n\n    const GroupLeaders = entries.filter(entry => entry.GroupLeader === true);\n\n    const ownedepunchentries = GroupLeaders.filter(entry => entry.Epunch.length > 0).map(buildRegPdfRow);\n    const rentalepunchentries = GroupLeaders.filter(entry => entry.Epunch.length === 0).map(buildRegPdfRow);\n    const rentalepunchentries2 = GroupLeaders.filter(entry => entry.Epunch.length === 0).map(buildRegPdfRow);\n\n    tablebodyowned.push(...ownedepunchentries);\n    tablebodyrented.push(...rentalepunchentries);\n    tablebodyrented2.push(...rentalepunchentries2);\n\n    tablebodyowned.sort(lastNameSort);\n    tablebodyrented.sort(lastNameSort);\n    tablebodyrented2.sort(lastNameSort);\n\n    function lastNameSort(a:any[any][], b:any[any][]):number {\n        if (a[2].text && b[2].text) {\n            return a[2].text.localeCompare(b[2].text);\n        } else if (a[2].text) {\n            return 1;\n        } else {\n            return -1;\n        }\n    };\n\n    function header(pageTitle:string):any {\n        return({\n            columns: [\n                {\n                    width: '50%',\n                    text: pageTitle,\n                },\n                {\n                    width: '50%',\n                    text: userHeaderText,\n                }\n            ],\n            bold: true,\n            fontSize: 15,\n            margin: [0,0,0,10] // bottom only\n        })\n    };\n\n    function buildfooter(currentPage:number, pageCount:number):any {\n        return({\n            columns: [{\n                text: 'Page ' + currentPage.toString() + ' of ' + pageCount + '. Created: ' + nowtimestring(),\n                fontSize: 8,\n                margin: [50,0,0,0]\n                },\n                {\n                    text: 'Source File(s): ' + files,\n                    fontSize: 8,\n                    margin: [0,0,50,0],\n                    alignment: 'right'\n                }\n            ]\n        })\n    }\n\n    let instructionsRegOwned:any = () => {return({\n        text: [{text: 'Registration Volunteers: ', italics: true, bold: true}, 'Check off each participant in the first column when they arrive. Please verify course assignment, epunch number, contact, and vehicle information. Collect any money owed and cross out in the owed column when paid.'],\n        margin: [0,0,0,10] // bottom only\n    })};\n\n    let instructionsRegRent:any = () => {return({\n        text: [{text: 'Registration Volunteers: ', italics: true, bold: true}, 'Check off each participant in the first column when they arrive. Write the rental epunch number in the large box but do not check the shaded box. Please verify course assignment, contact, and vehicle information. Collect any money owed and cross out in the owed column when paid.'],\n        margin: [0,0,0,10] // bottom only\n    })};\n    \n    let instructionsFinishRent:any = () => {return({\n        text: [{text: 'Finish Volunteers: ', italics: true, bold: true}, 'Find any epunch numbers that haven\\'t been checked off. Find the corresponding registration in the computer, add the epunch number from this page, and check it off. Return this list to registration.'],\n        margin: [0,0,0,10] // bottom only\n    })};\n\n    let tableLayoutRent:any = () => {return(\n        {\n            fillColor: function (rowIndex:number) {\n                return (rowIndex % 2 === 1) ? '#EEEEEE' : null;\n            },\n            paddingLeft: function() { return 4; },\n            paddingRight: function() { return 4; },\n            paddingTop: function() { return 2; },\n            paddingBottom: function() { return 2; },\n            hLineWidth(i:number, node:any) {\n                if (i === 0 || i === node.table.body.length) {\n                    return 0;\n                }\n                return (i === node.table.headerRows) ? 2 : 1;\n            },\n            vLineWidth() {\n                return 0;\n            },\n            hLineColor(i:number) {\n                return i === 1 ? 'black' : 'white';\n            },\n        }\n    )};\n\n    let tableLayoutOwned:any = () => {return(\n        {\n            fillColor: function (rowIndex:number) {\n                return (rowIndex % 2 === 1) ? '#EEEEEE' : null;\n            },\n            paddingLeft: function() { return 4; },\n            paddingRight: function() { return 4; },\n            paddingTop: function() { return 6; },\n            paddingBottom: function() { return 4; },\n            hLineWidth(i:number, node:any) {\n                if (i === 0 || i === node.table.body.length) {\n                    return 0;\n                }\n                return (i === node.table.headerRows) ? 2 : 0;\n            },\n            vLineWidth() {\n                return .5;\n            },\n            hLineColor(i:number) {\n                return i === 1 ? 'black' : 'white';\n            },\n            vLineColor() {\n                return 'white';\n            }\n        }\n    )};\n\n    function nowtimestring():string {\n        const now:Date = new Date();\n        const y = now.getFullYear().toString();\n        // const m = (now.getMonth() + 1).toString().padStart(2, \"0\");\n        const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n        const month = monthNames[now.getMonth()];\n        const d = now.getDate().toString().padStart(2, \"0\");\n        const dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        const day = dayNames[now.getDay()];\n        const H = now.getHours().toString().padStart(2, \"0\");\n        const M = now.getMinutes().toString().padStart(2, \"0\");\n        return H.concat(':',M,' ',day,' ',d,' ',month,', ',y);\n      }\n\n    const docDefinitionOwned:TDocumentDefinitions = {\n        pageSize: 'LETTER',\n        pageOrientation: 'landscape',\n        footer: buildfooter,\n        content: [\n            header('Pre-Registration List: OWNED punches'),\n            instructionsRegOwned(),\n            {\n                layout: tableLayoutOwned(),\n                table: {\n                    headerRows: 1,\n                    dontBreakRows: true,\n                    body: tablebodyowned\n                },\n            }\n        ]\n    }\n\n    const docDefinitionRented1:TDocumentDefinitions = {\n        pageSize: 'LETTER',\n        pageOrientation: 'landscape',\n        footer: buildfooter,\n        content: [\n            header('Pre-Registration List: RENTAL punches (list A)'),\n            instructionsRegRent(),\n            instructionsFinishRent(),\n            {\n                layout: tableLayoutRent(),\n                table: {\n                    headerRows: 1,\n                    body: tablebodyrented\n                },\n            },\n        ]\n    }\n\n    const docDefinitionRented2:TDocumentDefinitions = {\n        pageSize: 'LETTER',\n        pageOrientation: 'landscape',\n        footer: buildfooter,\n        content: [\n            header('Pre-Registration List: RENTAL punches (list B)'),\n            instructionsRegRent(),\n            instructionsFinishRent(),\n            {\n                layout: tableLayoutRent(),\n                table: {\n                    headerRows: 1,\n                    body: tablebodyrented2\n                },\n            },\n        ]\n    }\n\n    return([\n        {\n            name: \"Owned\", \n            doc: pdfMake.createPdf(docDefinitionOwned, {}, fonts)\n        }, \n        {\n            name: \"RentalA\", \n            doc: pdfMake.createPdf(docDefinitionRented1, {}, fonts)\n        },\n        {\n            name: \"RentalB\", \n            doc: pdfMake.createPdf(docDefinitionRented2, {}, fonts)\n        }\n    ]);\n}\n\n\nfunction buildRegPdfRow(entry:LtEntry): any[]{\n    const row = [\n        {\n            table: {\n                widths: [12],\n                heights: [10],\n                body: [[{\n                    text: entry.Owed > 0? {\n                        text:'$'.concat(entry.Owed.toString()), color:'#999999',\n                        fontSize: 7}: \" \", \n                    border: [true, true, true, true]}\n                ]]\n            }\n        },\n        {text: entry.FirstName, fontSize: 11},\n        {text: entry.LastName, fontSize: 11},\n        entry.Owed > 0? {text:'$'.concat(entry.Owed.toString()), fontSize: 11, bold:true}: \"\",\n        {text: entry.ClassId, fontSize: 11},\n        entry.Epunch.length === 0 ? \n            {\n                table: {\n                    widths: [100],\n                    heights: [25],\n                    body: [[{\n                        columns: [\n                            {\n                                width: '*',\n                                text: ' '\n                            },\n                            {\n                                width: 'auto',\n                                text: '     ',\n                                lineHeight: 1.45,\n                                background: '#CCCCCC'\n                            }\n                        ],\n                    }]]\n                },\n                layout: {\n                    hLineWidth() {\n                        return 1.5;\n                    },\n                    vLineWidth() {\n                        return 1.5;\n                    },\n                    hLineColor() {\n                        return 'black';\n                    },\n                    vLineColor() {\n                        return 'black';\n                    },\n                    paddingTop() {\n                        return 2;\n                    },\n                    paddingBottom() {\n                        return -2;\n                    },\n                    paddingRight() {\n                        return 2;\n                    }\n                }\n            }:\n            {text: entry.Epunch, fontSize: 11, alignment:'right'},\n        {text: entry.Club, fontSize: 11},\n        {text: formatPhoneNumber(entry.Phone), fontSize: 11, noWrap:true},\n        {text: formatPhoneNumber(entry.EmergencyPhone), fontSize: 11, noWrap:true  },\n        {text: entry.CarLicense, fontSize: 8}\n    ]\n    return(row);\n}\n\n// https://stackoverflow.com/questions/8358084/regular-expression-to-reformat-a-us-phone-number-in-javascript/41318684\nfunction formatPhoneNumber(phoneNumberString:string) {\n    var cleaned = ('' + phoneNumberString).replace(/\\D/g, '');\n    var match = cleaned.match(/^(1|)?(\\d{3})(\\d{3})(\\d{4})$/);\n    if (match) {\n      return ['(', match[2], ') ', match[3], '-', match[4]].join('');\n    }\n    return cleaned;\n  }","import React from 'react';\nimport './App.css';\nimport Papa from 'papaparse';\nimport { BasicDz } from './components/dz';\nimport * as SS from './orienteering/SportSoftware'\nimport { Button, ButtonGroup, ButtonToolbar, Col, Container, Dropdown, DropdownButton, Form, FormControl, Row } from 'react-bootstrap';\nimport { LtEntry, parseEnties } from './lt/Entry';\nimport { Header } from './components/Header';\nimport { PageTitle } from './components/PageTitle';\nimport {Entry} from './components/Entry';\nimport {EntryFile, entryFileMeta} from './components/EntryFile';\nimport { RegistrationClassCount } from './components/RegistrationClassCount';\nimport { buildCheckInPdf } from './orienteering/RegistrationCheckinPdf';\n\ntype myformstate = {\n  filesprocessed: entryFileMeta[],\n  entries: LtEntry[],\n  nextstartno: number,\n  pdftextvalue: string\n}\n\nclass EntryProcessor extends React.Component<{}, myformstate, {}> {\n  constructor(props:{}) {\n    super(props);\n    this.state = {\n      filesprocessed: [],\n      entries: [],\n      nextstartno: 1000,\n      pdftextvalue: ''\n    }\n    \n    this.downloadOeRegCsv = this.downloadOeRegCsv.bind(this);\n    this.updateEntries = this.updateEntries.bind(this);\n    this.handleClearEntries = this.handleClearEntries.bind(this);\n    this.nowtimestring = this.nowtimestring.bind(this);\n    this.downloadpdf = this.downloadpdf.bind(this);\n    this.onpdftextchange = this.onpdftextchange.bind(this);\n  }\n\n  handleClearEntries() {\n    this.setState({entries: [], filesprocessed: []});\n  }\n\n  downloadOeRegCsv(isScoreO:boolean=false) {\n    if (this.state.entries.length === 0) {\n      console.log(\"No entries\");\n      return\n    }\n\n    const forexport = SS.fromLtEntries(this.state.entries)\n\n    // export assigns start numbers to the LtEntry, so update state here\n    this.setState({entries: this.state.entries});\n\n    const unparseconfig:Papa.UnparseConfig = {\n      quotes: false,\n      delimiter: \";\",\n      header: true,\n      skipEmptyLines: \"greedy\",\n      columns: isScoreO ? SS.COLUMNS_SCOREO : SS.COLUMNS_STANDARD\n    }\n\n    const csvstring:string = Papa.unparse(forexport, unparseconfig);\n    const nowstring:string = this.nowtimestring();\n    const el = document.createElement('a');\n    el.href = 'data:text/csv;charset=utf-8,' + encodeURI(csvstring);\n    el.target = '_blank';\n    el.download = 'EntriesForOe-'.concat(nowstring, '.csv');\n    el.click();\n  }\n\n  nowtimestring():string {\n    const now:Date = new Date();\n    const y = now.getFullYear().toString();\n    const m = (now.getMonth() + 1).toString().padStart(2, \"0\");\n    const d = now.getDate().toString().padStart(2, \"0\");\n    const H = now.getHours().toString().padStart(2, \"0\");\n    const M = now.getMinutes().toString().padStart(2, \"0\");\n    return y.concat(m, d, 'T', H, M);\n  }\n\n  updateEntries(file:File) {\n    Papa.parse(file, {\n            header: true,\n            transform: (value, col) => {return(value.replace(/\\0/g, '').trim())},\n            complete: (results, file:File) => {\n      const parsed = parseEnties(results.data, this.state.nextstartno);\n      const newentries = this.state.entries.concat(parsed.data);\n      this.setState({entries: newentries, nextstartno: parsed.meta.maxstartno})\n\n      const newfile:entryFileMeta = {\n        name: file.name,\n        success: parsed.meta.success,\n        failed: parsed.meta.failed,\n        empty: parsed.meta.empty\n      };\n      this.setState({\n        filesprocessed: [...this.state.filesprocessed, newfile]\n      });\n  }\n  });\n  }\n\n  downloadpdf(headerText:string='') {\n    const checkInPdfs = buildCheckInPdf(this.state.entries, this.state.filesprocessed.map((x) => x.name), headerText);\n    const fileTimeString = this.nowtimestring();\n    for (const pdf of checkInPdfs) {\n      const fileName:string = 'Registrations-'.concat(fileTimeString, '-', pdf.name, '.pdf');\n      pdf.doc.download(fileName); \n    }\n  }\n\n  onpdftextchange(e:React.ChangeEvent<HTMLInputElement>) {\n    e.preventDefault();\n    this.setState({pdftextvalue:e.target.value});\n  }\n\n  render() {\n    const entries = (this.state.entries.length > 0) ? \n      this.state.entries.map((entry) =>\n      <Entry \n        value={entry}\n      />) :\n      <tr>\n        <td colSpan={6} style={{textAlign:'center'}}>\n          No Registrations to Show\n        </td>\n      </tr>\n    ;\n\n    const files = this.state.filesprocessed.map((filemeta) =>\n      <EntryFile\n        name={filemeta.name}\n        success={filemeta.success}\n        failed={filemeta.failed}\n        empty={filemeta.empty}\n      />\n    );\n\n    const regclasshist = this.state.entries.reduce(function(regclasshist: {[key:string]: number}, reg:LtEntry) {\n      if (!reg.GroupLeader) {\n        return regclasshist;\n      }\n      if (!regclasshist[reg.ClassId]) {\n        regclasshist[reg.ClassId] = 1;\n      } else {\n        regclasshist[reg.ClassId]++;\n      }\n      return regclasshist;\n    }, {});\n  \n    const regmeta = Object.entries(regclasshist);\n\n    const counts = regmeta.sort((a, b) => a[0].toLocaleLowerCase().localeCompare(b[0].toLocaleLowerCase())).map((regclass) => \n    <RegistrationClassCount\n      classname={regclass[0]}\n      regcount={regclass[1]}\n    />\n    );\n\n    return (\n      <div>\n        <PageTitle \n          title=\"Pre-Process Registration Files\" \n        />\n        <p>\n          Save event registration information in .csv format. Upload multiple files to combine registration information from multiple sources. (Todo: click to expand for supported csv formats)\n        </p>\n        <p>\n          This tool creates outputs ready for import into SportSoftware (OE) and PDF files to print and use at check-in.\n        </p>\n        <h4>Files</h4>\n        <p>\n          <BasicDz parser={this.updateEntries}/>\n        </p>\n        <Row>\n          <Col xs={12} md={6}>\n            <Row>\n              <p>Files Uploaded: {this.state.filesprocessed.length}</p>\n              <p><ul>{files}</ul></p>\n              <p>Registrations by Class (Total: {this.state.entries.filter(entry => entry.GroupLeader === true).length}) <i>This total does not include group members</i>.</p>\n              <p>\n              <Row>\n                {counts}\n              </Row>\n              </p>\n\n            </Row>\n            <Row>\n              <ButtonToolbar>\n                <ButtonGroup className=\"me-2\">\n                  <DropdownButton title=\"Download OE File\" \n                    variant=\"primary\"\n                    disabled={this.state.entries.length > 0 ? false:true}>\n                    <Dropdown.Item onClick={() => this.downloadOeRegCsv()}>Regular</Dropdown.Item>\n                    <Dropdown.Item onClick={() => this.downloadOeRegCsv(true)}>Score O</Dropdown.Item>\n                  </DropdownButton>\n                </ButtonGroup>\n                <ButtonGroup className=\"me-2\">\n                <Dropdown>\n                  <Dropdown.Toggle className={this.state.entries.length > 0 ? \"\":\"disabled\"}>\n                    Download Check-In PDFs\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu style={{ minWidth: '20rem' }}>\n                    <Dropdown.ItemText>Additional Custom Header Text:</Dropdown.ItemText>\n                    <Row className=\"justify-content-center\">\n                      <Col xs={12}>\n                        <Form \n                          style= {{marginRight: '16px', marginLeft: '16px'}}\n                          onSubmit={(e) => {e.preventDefault(); this.downloadpdf(this.state.pdftextvalue)}}>\n                          <FormControl type='text' onChange={this.onpdftextchange} value={this.state.pdftextvalue}></FormControl>\n                          <Button style= {{marginTop: '8px'}} type='submit' disabled={this.state.entries.length > 0 ? false:true}>Download PDFs</Button>\n                        </Form>\n                      </Col>\n                    </Row>\n                  </Dropdown.Menu>\n                </Dropdown>\n                </ButtonGroup>\n                <ButtonGroup>\n                  <Button \n                    variant=\"outline-secondary\" \n                    onClick={this.handleClearEntries}>\n                    Clear Registrations\n                  </Button>\n                </ButtonGroup>\n              </ButtonToolbar>\n            </Row>\n          </Col>\n          <Col xs={6} md={6}>\n\n            <table style={{textAlign: 'left'}}>\n              <thead>\n                <tr>\n                  <th>First</th>\n                  <th>Last</th>\n                  <th>Group</th>\n                  <th>Chip</th>\n                  <th>Rented?</th>\n                  <th>Class</th>\n                  <th>Start #</th>\n                </tr>\n              </thead>\n              <tbody>\n                {entries}\n              </tbody>\n            </table>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container fluid style={{\n        backgroundColor: '#F7F7F7',\n      }}>\n        <Header />\n        <Row>\n        <Col xs={{span:10, offset:1}}>\n          <EntryProcessor />\n        </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}