{"version":3,"sources":["components/dz.tsx","orienteering/SportSoftware.ts","orienteering/WiolEntry.ts","orienteering/CascadeRegistration.ts","lt/Entry.ts","assets/LostTimeWordmark.svg","assets/mapmontageblur.jpg","components/Header.tsx","components/PageTitle.tsx","components/Entry.tsx","components/EntryFile.tsx","components/RegistrationClassCount.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BasicDz","props","onDrop","baseStyle","flex","display","flexDirection","alignItems","padding","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","fontStyle","outline","transition","activeStyle","acceptStyle","rejectStyle","files","console","log","i","length","parser","setState","state","this","getRootProps","getInputProps","className","style","Component","convertFromLtEntry","entry","StartNo","Stno","Chipno","Epunch","toString","Surname","LastName","FirstName","S","Sex","nc","NonCompetitive","Classifier","City","Club","Short","ClassId","Rented","EpunchRented","Paid","COLUMNS_STANDARD","isWiolEntryCsv","row","Object","keys","isCascadeRegistrationCsv","LtEntry","Course","Phone","EmergencyPhone","CarLicense","Newcomer","Group","Owed","Rent","School","NC","Gen","EPunch","Class","Header","Row","backgroundImage","mapblur","backgroundRepeat","marginBottom","Col","xs","span","offset","paddingTop","paddingBottom","href","src","wordmark","alt","height","margin","React","PageTitle","title","width","marginTop","Entry","value","textAlign","EntryFile","failed","name","success","RegistrationClassCount","sm","md","lg","classname","regcount","EntryProcessor","filesprocessed","entries","nextstartno","handleUnparse","bind","updateEntries","handleClearEntries","nowtimestring","forexport","OeEntries","maxstartnoinuse","Math","max","map","o","e","push","SS","unparseconfig","quotes","delimiter","header","skipEmptyLines","columns","csvstring","Papa","unparse","nowstring","el","document","createElement","encodeURI","target","download","concat","click","now","Date","y","getFullYear","m","getMonth","padStart","d","getDate","H","getHours","M","getMinutes","file","parse","transform","col","replace","trim","complete","results","parsed","indata","nextbib","newentries","empty","fromWiolEntryCsv","fromCascadeRegistrationCsv","data","meta","maxstartno","parseEnties","newfile","colSpan","filemeta","regclasshist","reduce","reg","counts","sort","a","b","toLocaleLowerCase","localeCompare","regclass","Button","variant","onClick","disabled","App","Container","fluid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a1c4f56e.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Dropzone from 'react-dropzone';\n\nexport class BasicDz extends Component<{parser:any}, {files:File[]}, {}> {\n  onDrop: (files: File[]) => void;\n  constructor(props:{parser:any}) {\n    super(props);\n    this.onDrop = (files) => {\n        console.log(files);\n        for (let i = 0; i < files.length; i++) {\n            this.props.parser(files[i]);\n        };\n      this.setState({files})\n    };\n    this.state = {\n      files: []\n    };\n  }\n\n  baseStyle:any = {\n    flex: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '20px',\n    borderWidth: 2,\n    borderRadius: 10,\n    borderColor: 'magenta',\n    borderStyle: 'dashed',\n    backgroundColor: 'lightgrey',\n    color: 'black',\n    fontStyle: 'italic',\n    outline: 'none',\n    transition: 'border .24s ease-in-out'\n  };\n\n  activeStyle:any = {\n    borderColor: '#2196f3'\n  };\n  \n  acceptStyle:any = {\n    borderColor: '#00e676'\n  };\n  \n  rejectStyle:any = {\n    borderColor: '#ff1744'\n  };\n\n  render() {\n    return (\n      <Dropzone onDrop={this.onDrop}>\n        {({getRootProps, getInputProps}) => (\n          <section className=\"container\">\n            <div {...getRootProps({\n                className: 'dropzone',\n                style: this.baseStyle,\n                   })}>\n              <input {...getInputProps()} />\n              <p>Drop csv file(s) here or click to open file browser.</p>\n            </div>\n          </section>\n        )}\n      </Dropzone>\n    );\n  }\n}","import { LtEntry } from \"../lt/Entry\";\n\nexport type OeEntryCsv = {\n    Stno: number,\n    Chipno: string | null,\n    \"Database Id\":null,\n    Surname: string | null,\n    \"First name\": string | null\n    S: string,\n    nc: 0|1,\n    Classifier: 0,\n    City: string | null,\n    Short: string | null,\n    Rented: \"X\" | null,\n    \"Start fee\":0,\n    Paid:\"X\"\n  }\n\nexport function fromLtEntries(entries: LtEntry[]): OeEntryCsv[] {\n  let OeEntries:OeEntryCsv[] = [];\n  let nextstartno:number;\n  const maxstartnoinuse = Math.max(...entries.map(o => o.StartNo? o.StartNo:0))\n  nextstartno = maxstartnoinuse > 1001 ? maxstartnoinuse+1 : 1001;\n\n  for (let e of entries) {\n    if (!e.StartNo) {\n      e.StartNo = nextstartno;\n      nextstartno++;\n    }\n    OeEntries.push(convertFromLtEntry(e));\n  }\n  return OeEntries;\n}\n\nfunction convertFromLtEntry(entry:LtEntry): OeEntryCsv {\n  if (!entry.StartNo) {\n    throw 'Start number is required';\n  }\n  return {\n    Stno: entry.StartNo,\n    Chipno: entry.Epunch.toString(),\n    \"Database Id\":null,\n    Surname: entry.LastName,\n    \"First name\": entry.FirstName,\n    S: entry.Sex,\n    nc: entry.NonCompetitive ? 1:0,\n    Classifier: 0,\n    City: entry.Club,\n    Short: entry.ClassId,\n    Rented: entry.EpunchRented ? \"X\" : null,\n    \"Start fee\":0,\n    Paid: \"X\"\n  }\n}\n\nexport const COLUMNS_STANDARD = [\n    \"OE0001\",\n    \"Stno\",\n    \"XStno\",\n    \"Chipno\",\n    \"Database Id\",\n    \"Surname\",\n    \"First name\",\n    \"YB\",\n    \"S\",\n    \"Block\",\n    \"nc\",\n    \"Start\",\n    \"Finish\",\n    \"Time\",\n    \"Classifier\",\n    \"Credit -\",\n    \"Penalty +\",\n    \"Comment\",\n    \"Club no.\",\n    \"Cl.name\",\n    \"City\",\n    \"Nat\",\n    \"Location\",\n    \"Region\",\n    \"Cl. no.\",\n    \"Short\",\n    \"Long\",\n    \"Entry cl. No\",\n    \"Entry class (short)\",\n    \"Entry class (long)\",\n    \"Rank\",\n    \"Ranking points\",\n    \"Num1\",\n    \"Num2\",\n    \"Num3\",\n    \"Text1\",\n    \"Text2\",\n    \"Text3\",\n    \"Addr. surname\",\n    \"Addr. first name\",\n    \"Street\",\n    \"Line2\",\n    \"Zip\",\n    \"Addr. city\",\n    \"Phone\",\n    \"Mobile\",\n    \"Fax\",\n    \"EMail\",\n    \"Rented\",\n    \"Start fee\",\n    \"Paid\",\n    \"Team\",\n    \"Course no.\",\n    \"Course\",\n    \"km\",\n    \"m\",\n    \"Course controls\"\n  ]\n\nexport const COLUMNS_SCOREO = [\n  \"OEScore0001\",\n  \"Stno\",\n  \"XStno\",\n  \"Chipno\",\n  \"Database Id\",\n  \"Surname\",\n  \"First name\",\n  \"YB\",\n  \"S\",\n  \"Block\",\n  \"nc\",\n  \"Start\",\n  \"Finish\",\n  \"Time\",\n  \"Classifier\",\n  \"Credit -\",\n  \"Penalty +\",\n  \"Comment\",\n  \"Club no.\",\n  \"Cl.name\",\n  \"City\",\n  \"Nat\",\n  \"Location\",\n  \"Region\",\n  \"Cl. no.\",\n  \"Short\",\n  \"Long\",\n  \"Entry cl. No\",\n  \"Entry class (short)\",\n  \"Entry class (long)\",\n  \"Rank\",\n  \"Ranking points\",\n  \"Num1\",\n  \"Num2\",\n  \"Num3\",\n  \"Text1\",\n  \"Text2\",\n  \"Text3\",\n  \"Addr. surname\",\n  \"Addr. first name\",\n  \"Street\",\n  \"Line2\",\n  \"Zip\",\n  \"Addr. city\",\n  \"Phone\",\n  \"Mobile\",\n  \"Fax\",\n  \"EMail\",\n  \"Rented\",\n  \"Start fee\",\n  \"Paid\",\n  \"Team\",\n  \"Course no.\",\n  \"Course\",\n  \"km\",\n  \"m\",\n  \"Course controls\"\n]","export class WiolEntryCsv {\n    \"Bib #\"!: number;\n    \"SI Card\"!: string;\n    Rent!: \"X\" | null;\n    \"First Name\"!: string;\n    \"Last Name\"!: string;\n    Gen!: \"M\" | \"F\";\n    School!: string;\n    Course!: string;\n    NC!: \"X\" | null;\n}\n\nexport function isWiolEntryCsv(row:any): boolean {\n    return (\n        Object.keys(row).length === 9 &&\n        'Bib #' in row &&\n        \"SI Card\" in row &&\n        'Rent' in row &&\n        \"First Name\" in row &&\n        \"Last Name\" in row &&\n        'Gen' in row &&\n        'School' in row &&\n        'Course' in row &&\n        'NC' in row\n    )\n}","export class CascadeRegistrationCsv {\n    FirstName!: string;\n    LastName!: string;\n    Email!: string;\n    Club!: string;\n    Class!: string;\n    Sex!: \"F\" | \"M\";\n    EPunch!: string;\n    Phone!: string;\n    EmergencyPhone!: string;\n    CarLicense!: string;\n    Newcomer!: true | false;\n    Group!: number | null;\n    Paid!: true | false;\n    Owed!: number | null\n}\n\nexport function isCascadeRegistrationCsv(row:any): boolean {\n    if (\n        Object.keys(row).length === 14 &&\n        'FirstName' in row &&\n        'LastName' in row &&\n        'Email' in row &&\n        'Club' in row &&\n        'Class' in row &&\n        'Sex' in row &&\n        'EPunch' in row &&\n        'Phone' in row &&\n        'EmergencyPhone' in row &&\n        'CarLicense' in row &&\n        'Newcomer' in row &&\n        'Group' in row &&\n        'Paid' in row &&\n        'Owed' in row\n    ) {\n        return true;\n    }\n    return false;\n}","import { isWiolEntryCsv, WiolEntryCsv } from \"../orienteering/WiolEntry\"\nimport { CascadeRegistrationCsv, isCascadeRegistrationCsv } from \"../orienteering/CascadeRegistration\"\n\nexport type ParseResult = {\n    data: LtEntry[],\n    meta: {\n      success: number,\n      failed: number,\n      empty: number,\n      maxstartno: number,\n    }\n  }\n\nexport class LtEntry {\n    StartNo!: number | null;\n    Epunch!: string;\n    EpunchRented!: true | false;\n    FirstName!: string;\n    LastName!: string;\n    Club!: string;\n    Course!: string;\n    ClassId!: string;\n    NonCompetitive!: true | false;\n    Sex!: \"F\" | \"M\";\n    Phone!: string;\n    EmergencyPhone!: string;\n    CarLicense!: string;\n    Newcomer!: true | false | \"unknown\";\n    Group!: number;\n    Paid!: true | false | \"unknown\";\n    Owed!: number;\n\n    fromWiolEntryCsv(\n        entry: WiolEntryCsv\n    ) {\n        this.StartNo = entry[\"Bib #\"];\n        this.Epunch = entry[\"SI Card\"];\n        this.EpunchRented= (entry.Rent === 'X') ? true: false;\n        this.FirstName= entry[\"First Name\"];\n        this.LastName= entry[\"Last Name\"];\n        this.Club= entry.School;\n        this.Course= '';\n        this.ClassId= entry.Course;\n        this.NonCompetitive= (entry.NC === 'X') ? true:false;\n        this.Sex= entry.Gen;\n        this.Phone= '';\n        this.EmergencyPhone= '';\n        this.CarLicense= '';\n        this.Newcomer= \"unknown\";\n        this.Group= 1;\n        this.Paid= \"unknown\";\n        this.Owed= 0;\n\n        return this;\n    }\n    fromCascadeRegistrationCsv(\n        entry: CascadeRegistrationCsv,\n    ) {\n        this.StartNo = null;\n        this.Epunch = entry.EPunch\n        this.EpunchRented= (entry.EPunch === '') ? true:false;\n        this.FirstName= entry.FirstName\n        this.LastName= entry.LastName\n        this.Club= entry.Club\n        this.Course= '';\n        this.ClassId= entry.Class;\n        this.NonCompetitive= false;\n        this.Sex= entry.Sex\n        this.Phone= entry.Phone\n        this.EmergencyPhone= entry.EmergencyPhone;\n        this.CarLicense= entry.CarLicense\n        this.Newcomer= entry.Newcomer\n        this.Group= (entry.Group) ? entry.Group: 1; \n        this.Paid= entry.Paid\n        this.Owed= (entry.Owed) ? entry.Owed: 0;\n\n        return this;\n    }\n}\n\nexport function parseEnties(indata:any[], nextbib?:number): ParseResult {\n\n    const newentries:LtEntry[] = [];\n    let empty = 0;\n    let failed = 0;\n    for (const row of indata) {\n\n        if (isWiolEntryCsv(row)) {\n            const e = new LtEntry().fromWiolEntryCsv(row);\n            newentries.push(e);\n            continue;\n        } else if (isCascadeRegistrationCsv(row)) {\n            const e = new LtEntry().fromCascadeRegistrationCsv(row);\n            newentries.push(e);\n            continue;\n        } else if (Object.keys(row).length <= 1) {\n            console.log(Object.keys(row))\n            console.log('empty row');\n            empty += 1;\n            continue;\n        } else {\n            console.log(Object.keys(row))\n            console.log('failed to parse row');\n            failed += 1;\n        }\n    }\n\n    return {\n        data: newentries,\n        meta: {\n            success: newentries.length,\n            failed: failed,\n            empty: empty,\n            maxstartno: Math.max(...newentries.map(o => o.StartNo? o.StartNo:1001))\n        }\n    }\n}","export default __webpack_public_path__ + \"static/media/LostTimeWordmark.2977d17a.svg\";","export default __webpack_public_path__ + \"static/media/mapmontageblur.c977ea5b.jpg\";","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport wordmark from  '../assets/LostTimeWordmark.svg';\nimport mapblur from '../assets/mapmontageblur.jpg';\n\nexport class Header extends React.Component<{}, {}, {}> {\n\n  render () {\n  return (\n    <Row>\n    <nav className=\"nav-bar\" style={{\n      backgroundImage: `url(${mapblur})`,\n      backgroundRepeat: 'repeat-xy',\n      marginBottom: '20px'\n    }}>\n      <Col xs={{span:10, offset:1}}>\n        <div className=\"nav-img\" style={{\n          paddingTop: '5px',\n          paddingBottom: '5px'\n        }}>\n          <a href=\"/\">\n            <img src={wordmark} alt=\"Lost Time Orienteering\" style={{\n              height: '60px',\n              margin: '0px'\n            }}></img>\n          </a>\n        </div>\n      </Col>\n    </nav>\n    </Row>\n  );\n  }\n}","import React from 'react';\n\nexport class PageTitle extends React.Component<{title: string}, {}, {}> {\n\n  render () {\n  return (\n    <div>\n    <h2 style={{\n\n    }}>\n        {this.props.title}\n    </h2>\n    <div style={{\n        width: '100%',\n        height: '2px',\n        backgroundColor: 'magenta',\n        marginTop: '10px',\n        marginBottom: '10px'\n    }}>\n    </div>\n    </div>\n  );\n  }\n\n}","import React from 'react';\nimport { LtEntry } from '../lt/Entry';\n\nexport class Entry extends React.Component<{value: LtEntry}, {}, {}> {\n\n  render () {\n  return (\n    <tr>\n      <td>{this.props.value.FirstName}</td>\n      <td>{this.props.value.LastName}</td>\n      <td>{this.props.value.Epunch}</td>\n      <td style={{textAlign:'center'}}>{this.props.value.EpunchRented? \"yes\": \"no\"}</td>\n      <td>{this.props.value.ClassId}</td>\n      <td>{this.props.value.StartNo}</td>\n    </tr>\n  );\n  }\n\n}","import React from 'react';\n\nexport type entryFileMeta = {\n    name: string,\n    success: number,\n    failed: number,\n    empty: number\n  }\n\nexport class EntryFile extends React.Component<entryFileMeta, {}, any> {\n\n  render () {\n    if (this.props.failed > 0) {\n      return <li>{this.props.name} (Found: {this.props.success}, Failed: {this.props.failed})</li>\n    }\n    return (\n      <li>{this.props.name} (Found: {this.props.success})</li>\n    )\n  }\n}","import React from 'react';\nimport { Col } from 'react-bootstrap';\n\nexport class RegistrationClassCount extends React.Component<{classname:string, regcount:number}, {}, {}> {\n\n  render () {\n    return (\n      // <li>\n      //   <b>{this.props.classname}</b>: {this.props.regcount}\n      // </li>\n      <Col xs={4} sm={3} md={4} lg={3}><b>{this.props.classname}</b>: {this.props.regcount}</Col>\n\n    )\n  }\n}","import React from 'react';\nimport './App.css';\nimport Papa from 'papaparse';\nimport { BasicDz } from './components/dz';\nimport * as SS from './orienteering/SportSoftware'\nimport { Button, Col, Container, Row } from 'react-bootstrap';\nimport { LtEntry, parseEnties } from './lt/Entry';\nimport { Header } from './components/Header';\nimport { PageTitle } from './components/PageTitle';\nimport {Entry} from './components/Entry';\nimport {EntryFile, entryFileMeta} from './components/EntryFile';\nimport { RegistrationClassCount } from './components/RegistrationClassCount';\n\ntype myformstate = {\n  filesprocessed: entryFileMeta[],\n  entries: LtEntry[],\n  nextstartno: number\n}\n\nclass EntryProcessor extends React.Component<{}, myformstate, {}> {\n  constructor(props:{}) {\n    super(props);\n    this.state = {\n      filesprocessed: [],\n      entries: [],\n      nextstartno: 1000\n    }\n\n    this.handleUnparse = this.handleUnparse.bind(this);\n    this.updateEntries = this.updateEntries.bind(this);\n    this.handleClearEntries = this.handleClearEntries.bind(this);\n    this.nowtimestring = this.nowtimestring.bind(this);\n  }\n\n  handleClearEntries() {\n    this.setState({entries: [], filesprocessed: []});\n  }\n\n  handleUnparse() {\n    if (this.state.entries.length === 0) {\n      console.log(\"No entries\");\n      return\n    }\n\n    const forexport = SS.fromLtEntries(this.state.entries)\n\n    // export assigns start numbers to the LtEntry, so update state here\n    this.setState({entries: this.state.entries});\n\n    const unparseconfig:Papa.UnparseConfig = {\n      quotes: false,\n      delimiter: \";\",\n      header: true,\n      skipEmptyLines: \"greedy\",\n      columns: SS.COLUMNS_STANDARD\n    }\n\n    const csvstring:string = Papa.unparse(forexport, unparseconfig);\n    const nowstring:string = this.nowtimestring();\n    const el = document.createElement('a');\n    el.href = 'data:text/csv;charset=utf-8,' + encodeURI(csvstring);\n    el.target = '_blank';\n    el.download = 'EntriesForOe-'.concat(nowstring, '.csv');\n    el.click();\n  }\n\n  nowtimestring():string {\n    const now:Date = new Date();\n    const y = now.getFullYear().toString();\n    const m = (now.getMonth() + 1).toString().padStart(2, \"0\");\n    const d = now.getDate().toString().padStart(2, \"0\");\n    const H = now.getHours().toString().padStart(2, \"0\");\n    const M = now.getMinutes().toString().padStart(2, \"0\");\n    return y.concat(m, d, 'T', H, M);\n  }\n\n  updateEntries(file:File) {\n    Papa.parse(file, {\n            header: true,\n            transform: (value, col) => {return(value.replace(/\\0/g, '').trim())},\n            complete: (results, file:File) => {\n      const parsed = parseEnties(results.data, this.state.nextstartno);\n      const newentries = this.state.entries.concat(parsed.data);\n      this.setState({entries: newentries, nextstartno: parsed.meta.maxstartno})\n\n      const newfile:entryFileMeta = {\n        name: file.name,\n        success: parsed.meta.success,\n        failed: parsed.meta.failed,\n        empty: parsed.meta.empty\n      };\n      this.setState({\n        filesprocessed: [...this.state.filesprocessed, newfile]\n      });\n  }\n\n  });\n  }\n\n  render() {\n    const entries = (this.state.entries.length > 0) ? \n      this.state.entries.map((entry) =>\n      <Entry \n        value={entry}\n      />) :\n      <tr>\n        <td colSpan={6} style={{textAlign:'center'}}>\n          No Registrations to Show\n        </td>\n      </tr>\n    ;\n\n    const files = this.state.filesprocessed.map((filemeta) =>\n      <EntryFile\n        name={filemeta.name}\n        success={filemeta.success}\n        failed={filemeta.failed}\n        empty={filemeta.empty}\n      />\n    );\n\n    const regclasshist = this.state.entries.reduce(function(regclasshist: {[key:string]: number}, reg:LtEntry) {\n      if (!regclasshist[reg.ClassId]) {\n        regclasshist[reg.ClassId] = 1;\n      } else {\n        regclasshist[reg.ClassId]++;\n      }\n      return regclasshist;\n    }, {});\n  \n    const regmeta = Object.entries(regclasshist);\n\n\n    const counts = regmeta.sort((a, b) => a[0].toLocaleLowerCase().localeCompare(b[0].toLocaleLowerCase())).map((regclass) => \n    <RegistrationClassCount\n      classname={regclass[0]}\n      regcount={regclass[1]}\n    />\n  );\n\n    return (\n      <div>\n        <PageTitle \n          title=\"Pre-Process Registration Files\" \n        />\n        <p>\n          Save event registration information in .csv format. Upload multiple files to combine registration information from multiple sources. (Todo: click to expand for supported csv formats)\n        </p>\n        <p>\n          This tool creates outputs ready for import into SportSoftware (OE). (Future: and pdf files to use at check-in)\n        </p>\n        <h4>Files</h4>\n        <p>\n          <BasicDz parser={this.updateEntries}/>\n        </p>\n        <Row>\n          <Col xs={12} md={6}>\n            <Row>\n              <p>Files Uploaded: {this.state.filesprocessed.length}</p>\n              <p><ul>{files}</ul></p>\n              <p>Registrations by Class (Total: {this.state.entries.length})</p>\n              <p>\n              <Row>\n                {counts}\n              </Row>\n              </p>\n\n            </Row>\n            <Row>\n              <p>\n                <Button \n                  variant=\"primary\" \n                  onClick={this.handleUnparse} \n                  disabled={this.state.entries.length > 0 ? false:true}\n                >\n                  Download OE File\n                </Button>\n                &nbsp;\n                <Button \n                  variant=\"outline-secondary\" \n                  onClick={this.handleClearEntries}\n                >\n                  Clear Registrations\n                </Button>\n              </p>\n            </Row>\n          </Col>\n          <Col xs={6} md={6}>\n\n            <table style={{textAlign: 'left'}}>\n              <thead>\n                <tr>\n                  <th>First</th>\n                  <th>Last</th>\n                  <th>Chip</th>\n                  <th>Rented?</th>\n                  <th>Class</th>\n                  <th>Start #</th>\n                </tr>\n              </thead>\n              <tbody>\n                {entries}\n              </tbody>\n            </table>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container fluid style={{\n        backgroundColor: '#F7F7F7',\n      }}>\n        <Header />\n        <Row>\n        <Col xs={{span:10, offset:1}}>\n          <EntryProcessor />\n        </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Importing the Bootstrap CSS\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}